{"ast":null,"code":"var _jsxFileName = \"/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/src/components/SeasonsPage.js\";\nimport React from 'react';\nimport BackGroundImage from './../FIFA-logo.jpg';\nimport Papa from 'papaparse';\n\nclass SeasonsPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addOption = () => {\n      const season = this.state.seasonList;\n      var x = document.getElementById(\"myDropdown\");\n\n      for (var i = 0; i < season.length; ++i) {\n        var option = document.createElement(\"option\");\n        option.text = season[i];\n        option.value = season[i];\n        x.add(option);\n      }\n    };\n\n    this.selectSeason = event => {\n      this.props.selectSeason(event.target.value);\n    };\n\n    this.state = {\n      seasonList: []\n    };\n  }\n\n  componentDidMount() {\n    this.searchSeason();\n  }\n\n  async getData(URL) {\n    // create a function that returns a Promise that resolves when papa parse complete is called\n    const papaParsePromise = blob => new Promise(resolve => Papa.parse(blob, {\n      complete: resolve\n    }));\n\n    const response = await fetch(URL);\n    const blob = await response.blob();\n    const data = await papaParsePromise(blob);\n    return data;\n  }\n\n  async searchSeason() {\n    const parsed_data = await this.getData('./matches.csv');\n    const matchesData = parsed_data.data; // console.log(\"Reference: \"+ matchesData[3]);\n\n    const teams = this.props.teamID;\n\n    for (var j = 0; j < teams.length; ++j) {\n      for (var i = 0; i < matchesData.length; ++i) {\n        const matchesDataSplit = matchesData[i];\n\n        if (matchesDataSplit[7] === teams[j]) {\n          if (this.state.seasonList.includes(matchesDataSplit[3]) === false) {\n            // index 7 = home_api_id\n            await this.setState(prevState => ({\n              seasonList: prevState.seasonList.concat(matchesDataSplit[3])\n            }));\n          }\n        }\n      }\n    } // console.log(this.state.seasonList);\n\n\n    this.addOption();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"padded-page FIFA_wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"SelectTeam\",\n      className: \"dropdown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Welcome to FIFA Analysis\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"League: \", this.props.League), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Team: \", this.props.Team), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Please Select a Season.\"), React.createElement(\"select\", {\n      id: \"myDropdown\",\n      className: \"dropdown-content\",\n      onChange: this.selectSeason,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Select Season\")), React.createElement(\"img\", {\n      src: BackGroundImage,\n      alt: \"bg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        fontStyle: \"italic\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Version CptS 575 Final Project\"))));\n  }\n\n}\n\nexport default SeasonsPage;","map":{"version":3,"sources":["/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/src/components/SeasonsPage.js"],"names":["React","BackGroundImage","Papa","SeasonsPage","Component","constructor","props","addOption","season","state","seasonList","x","document","getElementById","i","length","option","createElement","text","value","add","selectSeason","event","target","componentDidMount","searchSeason","getData","URL","papaParsePromise","blob","Promise","resolve","parse","complete","response","fetch","data","parsed_data","matchesData","teams","teamID","j","matchesDataSplit","includes","setState","prevState","concat","render","League","Team","fontStyle"],"mappings":"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","sourcesContent":["import React from 'react';\nimport BackGroundImage from './../FIFA-logo.jpg';\nimport Papa from 'papaparse';\n\n\nclass SeasonsPage extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {seasonList: []}\n    }\n\n    componentDidMount(){ \n        this.searchSeason();\n    }\n\n    async getData(URL) {\n        // create a function that returns a Promise that resolves when papa parse complete is called\n        const papaParsePromise = blob => new Promise(resolve => Papa.parse(blob, { complete: resolve }));\n        const response = await fetch(URL);\n        const blob = await response.blob();\n        const data = await papaParsePromise(blob);\n        return data;\n    };\n\n    async searchSeason() {\n        const parsed_data = await this.getData('./matches.csv');\n        const matchesData = parsed_data.data;\n        // console.log(\"Reference: \"+ matchesData[3]);\n        const teams = this.props.teamID;\n        for(var j = 0; j < teams.length; ++j){\n            for (var i = 0; i < matchesData.length; ++i){\n                const matchesDataSplit = matchesData[i];\n                if (matchesDataSplit[7] === teams[j]){\n                    if(this.state.seasonList.includes(matchesDataSplit[3]) === false){\n                        // index 7 = home_api_id\n                        await this.setState(prevState => ({ seasonList: prevState.seasonList.concat(matchesDataSplit[3])}));\n                    }   \n                }\n            }\n        }\n        // console.log(this.state.seasonList);\n        this.addOption();\n    }\n\n    addOption = () => {\n        const season = this.state.seasonList;\n        var x = document.getElementById(\"myDropdown\");\n        for (var i = 0; i < season.length; ++i){\n            var option = document.createElement(\"option\");\n            option.text = season[i];\n            option.value = season[i];\n            x.add(option);\n        }\n    }\n\n    selectSeason = (event) =>{\n        this.props.selectSeason(event.target.value);\n    }\n\n    render() {\n        return (\n        <div className=\"padded-page FIFA_wrap\">\n            <center>\n            <div id = \"SelectTeam\" className = \"dropdown\">\n                <h2>Welcome to FIFA Analysis</h2>\n                <p>League: {this.props.League}</p>\n                <p>Team: {this.props.Team}</p>\n                <p>Please Select a Season.</p>\n                <select id=\"myDropdown\" className=\"dropdown-content\" onChange={this.selectSeason}>\n                    <option value=\"0\">Select Season</option>\n                </select>\n                <img src={BackGroundImage} alt=\"bg\"></img>\n                <p></p>\n                <p></p>\n                <p style={{fontStyle: \"italic\"}}>Version CptS 575 Final Project</p>\n            </div>\n            </center>\n        </div>\n        );\n    }   \n}\n\nexport default SeasonsPage;"]},"metadata":{},"sourceType":"module"}