{"ast":null,"code":"var _jsxFileName = \"/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/src/components/TeamsPage.js\";\nimport React from 'react';\nimport BackGroundImage from './../FIFA-logo.jpg';\nimport Papa from 'papaparse';\nimport fs from 'fs';\nimport { thresholdScott } from 'd3';\n\nclass TeamsPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addOption = () => {\n      const team = this.state.TeamName;\n      var x = document.getElementById(\"myDropdown\");\n\n      for (var i = 0; i < team.length; ++i) {\n        var option = document.createElement(\"option\");\n        option.text = team[i];\n        option.value = team[i];\n        x.add(option);\n      }\n    };\n\n    this.selectTeam = event => {\n      this.props.selectTeam(event.target.value);\n    };\n\n    this.state = {\n      LeagueID: this.props.LeagueID,\n      TeamID: [],\n      TeamName: [],\n      NoDuplicate: true\n    };\n  }\n\n  componentDidMount() {\n    this.searchTeamID();\n  } // const data_url = \"acdata.csv\";\n\n\n  async getData(URL) {\n    // create a function that returns a Promise that resolves when papa parse complete is called\n    const papaParsePromise = blob => new Promise(resolve => Papa.parse(blob, {\n      complete: resolve\n    }));\n\n    const response = await fetch(URL);\n    const blob = await response.blob();\n    const data = await papaParsePromise(blob);\n    return data;\n  }\n\n  async searchTeamID() {\n    const parsed_data = await this.getData('./matches.csv');\n    const matchesData = parsed_data.data;\n    console.log(\"Reference: \" + matchesData[3]);\n    const leagueID = this.props.LeagueID;\n\n    for (var i = 0; i < matchesData.length; ++i) {\n      const matchesDataSplit = matchesData[i];\n\n      if (matchesDataSplit[1] === leagueID) {\n        if (this.state.TeamID.includes(matchesDataSplit[7]) === false) {\n          // index 7 = home_api_id\n          await this.setState(prevState => ({\n            TeamID: prevState.TeamID.concat(matchesDataSplit[7])\n          }));\n        }\n      }\n    }\n\n    console.log(\"Team ID list: \" + this.state.TeamID);\n    this.props.handleTeam(this.state.TeamID);\n    this.convertTeamName();\n  }\n\n  async convertTeamName() {\n    const team = this.state.TeamID;\n    const parsed_data = await this.getData('./teams.csv');\n    const teamsData = parsed_data.data; // var j = 0;\n    // console.log(teamsData);\n\n    for (var j = 0; j < team.length; ++j) {\n      for (var i = 0; i < teamsData.length; ++i) {\n        const teamsDataSplit = teamsData[i];\n\n        if (teamsDataSplit[2] === team[j]) {\n          await this.setState(prevState => ({\n            TeamName: prevState.TeamName.concat(teamsDataSplit[4])\n          }));\n        }\n      }\n    }\n\n    this.addOption(); // console.log(\"Team ID length: \" + team.length + \" Team Name length: \" + this.state.TeamName.length);\n    // console.log(this.state.TeamName);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"padded-page FIFA_wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"SelectTeam\",\n      className: \"dropdown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Welcome to FIFA Analysis\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"League: \", this.props.League), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Please Select a Team.\"), React.createElement(\"select\", {\n      id: \"myDropdown\",\n      className: \"dropdown-content\",\n      onChange: this.selectTeam,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Select Team\")), React.createElement(\"img\", {\n      src: BackGroundImage,\n      alt: \"bg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        fontStyle: \"italic\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Version CptS 575 Final Project\"))));\n  }\n\n}\n\nexport default TeamsPage;","map":{"version":3,"sources":["/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/src/components/TeamsPage.js"],"names":["React","BackGroundImage","Papa","fs","thresholdScott","TeamsPage","Component","constructor","props","addOption","team","state","TeamName","x","document","getElementById","i","length","option","createElement","text","value","add","selectTeam","event","target","LeagueID","TeamID","NoDuplicate","componentDidMount","searchTeamID","getData","URL","papaParsePromise","blob","Promise","resolve","parse","complete","response","fetch","data","parsed_data","matchesData","console","log","leagueID","matchesDataSplit","includes","setState","prevState","concat","handleTeam","convertTeamName","teamsData","j","teamsDataSplit","render","League","fontStyle"],"mappings":"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","sourcesContent":["import React from 'react';\nimport BackGroundImage from './../FIFA-logo.jpg';\nimport Papa from 'papaparse';\nimport fs from 'fs';\nimport { thresholdScott } from 'd3';\n\n\nclass TeamsPage extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {LeagueID: this.props.LeagueID,\n                      TeamID: [],\n                      TeamName:[],\n                      NoDuplicate: true}\n    }\n\n    componentDidMount(){ \n        this.searchTeamID();\n    }\n\n    // const data_url = \"acdata.csv\";\n    async getData(URL) {\n        // create a function that returns a Promise that resolves when papa parse complete is called\n        const papaParsePromise = blob => new Promise(resolve => Papa.parse(blob, { complete: resolve }));\n        const response = await fetch(URL);\n        const blob = await response.blob();\n        const data = await papaParsePromise(blob);\n        return data;\n    };\n\n    async searchTeamID() {\n        const parsed_data = await this.getData('./matches.csv');\n        const matchesData = parsed_data.data;\n        console.log(\"Reference: \"+ matchesData[3]);\n        const leagueID = this.props.LeagueID;\n        for (var i = 0; i < matchesData.length; ++i){\n            const matchesDataSplit = matchesData[i];\n            if (matchesDataSplit[1] === leagueID){\n                if(this.state.TeamID.includes(matchesDataSplit[7]) === false){\n                    // index 7 = home_api_id\n                    await this.setState(prevState => ({ TeamID: prevState.TeamID.concat(matchesDataSplit[7])}));\n                }   \n            }\n        }\n        console.log(\"Team ID list: \" + this.state.TeamID);\n        this.props.handleTeam(this.state.TeamID);\n        this.convertTeamName()\n    }\n\n    async convertTeamName(){\n        const team = this.state.TeamID;\n        const parsed_data = await this.getData('./teams.csv');\n        const teamsData = parsed_data.data;\n        // var j = 0;\n        // console.log(teamsData);\n        for (var j = 0; j < team.length; ++j){\n            for (var i = 0; i < teamsData.length; ++i){\n                const teamsDataSplit = teamsData[i]\n                if(teamsDataSplit[2] === team[j]){\n                    await this.setState(prevState => ({ TeamName: prevState.TeamName.concat(teamsDataSplit[4])}));\n                }\n            }\n        }\n        this.addOption()\n        // console.log(\"Team ID length: \" + team.length + \" Team Name length: \" + this.state.TeamName.length);\n        // console.log(this.state.TeamName);\n    }\n\n    addOption = () => {\n        const team = this.state.TeamName;\n        var x = document.getElementById(\"myDropdown\");\n        for (var i = 0; i < team.length; ++i){\n            var option = document.createElement(\"option\");\n            option.text = team[i];\n            option.value = team[i];\n            x.add(option);\n        }\n    }\n\n    selectTeam = (event) =>{\n        this.props.selectTeam(event.target.value);\n    }\n\n    render() {\n        return (\n        <div className=\"padded-page FIFA_wrap\">\n            <center>\n            <div id = \"SelectTeam\" className = \"dropdown\">\n                <h2>Welcome to FIFA Analysis</h2>\n                <p>League: {this.props.League}</p>\n                <p>Please Select a Team.</p>\n                <select id=\"myDropdown\" className=\"dropdown-content\" onChange={this.selectTeam}>\n                    <option value=\"0\">Select Team</option>\n                </select>\n                <img src={BackGroundImage} alt=\"bg\"></img>\n                <p></p>\n                <p></p>\n                <p style={{fontStyle: \"italic\"}}>Version CptS 575 Final Project</p>\n            </div>\n            </center>\n        </div>\n        );\n    }   \n}\n\nexport default TeamsPage;"]},"metadata":{},"sourceType":"module"}