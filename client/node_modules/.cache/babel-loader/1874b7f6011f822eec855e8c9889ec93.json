{"ast":null,"code":"import _regeneratorRuntime from\"/Users/kevinchen/Desktop/WSU_Fall2020/Web/git-IA/IA7/code-ch23/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/kevinchen/Desktop/WSU_Fall2020/Web/git-IA/IA7/code-ch23/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"/Users/kevinchen/Desktop/WSU_Fall2020/Web/git-IA/IA7/code-ch23/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/kevinchen/Desktop/WSU_Fall2020/Web/git-IA/IA7/code-ch23/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/kevinchen/Desktop/WSU_Fall2020/Web/git-IA/IA7/code-ch23/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/kevinchen/Desktop/WSU_Fall2020/Web/git-IA/IA7/code-ch23/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/kevinchen/Desktop/WSU_Fall2020/Web/git-IA/IA7/code-ch23/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/kevinchen/Desktop/WSU_Fall2020/Web/git-IA/IA7/code-ch23/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/kevinchen/Desktop/WSU_Fall2020/Web/git-IA/IA7/code-ch23/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';var CreateAccountDialog=/*#__PURE__*/function(_React$Component){_inherits(CreateAccountDialog,_React$Component);function CreateAccountDialog(){var _this;_classCallCheck(this,CreateAccountDialog);_this=_possibleConstructorReturn(this,_getPrototypeOf(CreateAccountDialog).call(this));//Create a ref for the email input DOM element\n_this.checkAccountValidity=function(){if(_this.state.accountPassword!=_this.state.accountPasswordRepeat){//Passwords don't match\n_this.repeatPassRef.current.setCustomValidity(\"This password must match original password.\");}else{_this.repeatPassRef.current.setCustomValidity(\"\");}};_this.handleNewAccountChange=function(event){if(event.target.name===\"profilePic\"){if(event.target.value.length==0){//The user canceled the file selection -- set back to default\n_this.setState({profilePicURL:\"https://icon-library.net//images/default-profile-icon/default-profile-icon-24.jpg\"});}else{//The user selected a file\nvar self=_assertThisInitialized(_this);var val=event.target.value;var reader=new FileReader();reader.readAsDataURL(_this.profilePicRef.current.files[0]);reader.addEventListener(\"load\",function(){self.setState({profilePicURL:this.result});});}}else{_this.setState(_defineProperty({},event.target.name,event.target.value),_this.checkAccountValidity);}};_this.setDefaultDisplayName=function(event){if(event.target.value.length>0&&_this.state.displayName===\"\"){_this.setState({displayName:event.target.value});}};_this.handleCreateAccount=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var url,accountInfo,res,resText;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();url='/users/'+_this.state.accountName;accountInfo={displayName:_this.state.displayName,password:_this.state.accountPassword,profilePicURL:_this.state.profilePicURL,securityQuestion:_this.state.accountSecurityQuestion,securityAnswer:_this.state.accountSecurityAnswer};_context.next=5;return fetch(url,{headers:{'Accept':'application/json','Content-Type':'application/json'},method:'POST',body:JSON.stringify(accountInfo)});case 5:res=_context.sent;if(!(res.status==200)){_context.next=10;break;}//successful account creation!\n_this.props.accountCreateStatus(\"New account created! Enter credentials to log in.\");_context.next=14;break;case 10:_context.next=12;return res.text();case 12:resText=_context.sent;_this.props.accountCreateStatus(resText);case 14:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.newUserRef=React.createRef();_this.repeatPassRef=React.createRef();_this.profilePicRef=React.createRef();_this.state={accountName:\"\",displayName:\"\",profilePicURL:\"https://icon-library.net//images/default-profile-icon/default-profile-icon-24.jpg\",accountPassword:\"\",accountPasswordRepeat:\"\",accountSecurityQuestion:\"\",accountSecurityAnswer:\"\"};return _this;}//checkAccountValidity -- Callback function invoked after a form element in\n//the 'Create Account' dialog box changes and component state has been\n//updated. We need to check whether the passwords match. If they do not, \n//we set a custom validity message to be displayed when the user clicks the\n//'Create Account' button. Otherwise, we reset the custom validity message\n//to empty so that it will NOT fire when the user clicks 'Create Account'.\n_createClass(CreateAccountDialog,[{key:\"render\",value:function render(){return React.createElement(\"div\",{className:\"modal\",role:\"dialog\"},React.createElement(\"div\",{className:\"modal-dialog modal-lg\"},React.createElement(\"div\",{className:\"modal-content\"},React.createElement(\"div\",{className:\"modal-header\"},React.createElement(\"center\",null,React.createElement(\"h3\",{className:\"modal-title\"},React.createElement(\"b\",null,\"Create New Account\"))),React.createElement(\"button\",{className:\"close\",onClick:this.props.cancelCreateAccount},\"\\xD7\")),React.createElement(\"div\",{className:\"modal-body\"},React.createElement(\"form\",{onSubmit:this.handleCreateAccount},React.createElement(\"label\",null,\"Email:\",React.createElement(\"input\",{className:\"form-control form-text form-center\",name:\"accountName\",type:\"email\",size:\"35\",placeholder:\"Enter Email Address\",pattern:\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\\\.[A-Za-z]{2,}\",required:true,ref:this.newUserRef,value:this.state.accountName,onChange:this.handleNewAccountChange,onBlur:this.setDefaultDisplayName})),React.createElement(\"label\",null,\"Password:\",React.createElement(\"input\",{className:\"form-control form-text form-center\",name:\"accountPassword\",type:\"password\",size:\"35\",placeholder:\"Enter Password\",pattern:\"(?=^.{8,}$)((?=.*\\\\d)|(?=.*\\\\W+))(?![.\\\\n])(?=.*[A-Z])(?=.*[a-z]).*$\",required:true,value:this.state.accountPassword,onChange:this.handleNewAccountChange})),React.createElement(\"label\",null,\"Repeat Password:\",React.createElement(\"input\",{className:\"form-control form-text form-center\",name:\"accountPasswordRepeat\",type:\"password\",size:\"35\",placeholder:\"Repeat Password\",required:true,ref:this.repeatPassRef,value:this.state.accountPasswordRepeat,onChange:this.handleNewAccountChange})),React.createElement(\"label\",null,\"Display Name:\",React.createElement(\"input\",{className:\"form-control form-text form-center\",name:\"displayName\",type:\"text\",size:\"30\",placeholder:\"Display Name\",required:true,value:this.state.displayName,onChange:this.handleNewAccountChange})),React.createElement(\"label\",null,\"Profile Picture:\",React.createElement(\"br\",null),React.createElement(\"input\",{className:\"form-control form-text form-center\",name:\"profilePic\",type:\"file\",accept:\"image/x-png,image/gif,image/jpeg\",ref:this.profilePicRef,value:this.state.profilePic,onChange:this.handleNewAccountChange}),React.createElement(\"img\",{src:this.state.profilePicURL,height:\"60\",width:\"60\"})),React.createElement(\"label\",null,\"Security Question:\",React.createElement(\"textarea\",{className:\"form-control form-text form-center\",name:\"accountSecurityQuestion\",size:\"35\",placeholder:\"Security Question\",rows:\"2\",cols:\"35\",maxLength:\"100\",required:true,value:this.state.accountSecurityQuestion,onChange:this.handleNewAccountChange})),React.createElement(\"label\",null,\"Answer to Security Question:\",React.createElement(\"textarea\",{className:\"form-control form-text form-center\",name:\"accountSecurityAnswer\",type:\"text\",placeholder:\"Answer\",rows:\"2\",cols:\"35\",maxLength:\"100\",required:true,value:this.state.accountSecurityAnswer,onChange:this.handleNewAccountChange})),React.createElement(\"br\",null),React.createElement(\"button\",{role:\"submit\",className:\"btn btn-primary btn-color-theme modal-submit-btn\"},React.createElement(\"span\",{className:\"fa fa-user-plus\"}),\"\\xA0Create Account\"))))));}}]);return CreateAccountDialog;}(React.Component);export default CreateAccountDialog;","map":{"version":3,"sources":["/Users/kevinchen/Desktop/WSU_Fall2020/Web/git-IA/IA7/code-ch23/client/src/components/CreateAccountDialog.js"],"names":["React","CreateAccountDialog","checkAccountValidity","state","accountPassword","accountPasswordRepeat","repeatPassRef","current","setCustomValidity","handleNewAccountChange","event","target","name","value","length","setState","profilePicURL","self","val","reader","FileReader","readAsDataURL","profilePicRef","files","addEventListener","result","setDefaultDisplayName","displayName","handleCreateAccount","preventDefault","url","accountName","accountInfo","password","securityQuestion","accountSecurityQuestion","securityAnswer","accountSecurityAnswer","fetch","headers","method","body","JSON","stringify","res","status","props","accountCreateStatus","text","resText","newUserRef","createRef","cancelCreateAccount","profilePic","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass CreateAccountDialog extends React.Component {\n\n    constructor() {\n        super();\n        //Create a ref for the email input DOM element\n        this.newUserRef = React.createRef();\n        this.repeatPassRef = React.createRef();\n        this.profilePicRef = React.createRef();\n        this.state = {accountName: \"\",\n                      displayName: \"\",\n                      profilePicURL: \"https://icon-library.net//images/default-profile-icon/default-profile-icon-24.jpg\",\n                      accountPassword: \"\",\n                      accountPasswordRepeat: \"\",\n                      accountSecurityQuestion: \"\",\n                      accountSecurityAnswer: \"\"};\n\n    }\n\n    //checkAccountValidity -- Callback function invoked after a form element in\n    //the 'Create Account' dialog box changes and component state has been\n    //updated. We need to check whether the passwords match. If they do not, \n    //we set a custom validity message to be displayed when the user clicks the\n    //'Create Account' button. Otherwise, we reset the custom validity message\n    //to empty so that it will NOT fire when the user clicks 'Create Account'.\n    checkAccountValidity = () => {\n        if (this.state.accountPassword != this.state.accountPasswordRepeat) {\n            //Passwords don't match\n            this.repeatPassRef.current.setCustomValidity(\n            \"This password must match original password.\");\n        } else {\n            this.repeatPassRef.current.setCustomValidity(\"\");\n        }\n    }\n\n    //handleNewAccountChange--Called when a field in a dialog box form changes.\n    handleNewAccountChange = (event) => {\n        if (event.target.name === \"profilePic\") {\n            if (event.target.value.length == 0) { //The user canceled the file selection -- set back to default\n                this.setState({profilePicURL: \"https://icon-library.net//images/default-profile-icon/default-profile-icon-24.jpg\"});\n            } else { //The user selected a file\n                const self = this;\n                const val = event.target.value;\n                const reader = new FileReader();\n                reader.readAsDataURL(this.profilePicRef.current.files[0]);\n                reader.addEventListener(\"load\",function() {\n                    self.setState({profilePicURL: this.result});\n                });\n            }\n        } else {\n            this.setState({[event.target.name]: event.target.value},this.checkAccountValidity);\n        }\n    } \n\n    //setDefaultDisplayName -- Triggered by onBlur() event of Email field.\n    //Sets default value of display name to value entered into Email field \n    //as a courtesy.\n    setDefaultDisplayName = (event) => {\n      if (event.target.value.length > 0 && this.state.displayName === \"\") {\n        this.setState({displayName: event.target.value});\n      }\n    }\n\n    //handleCreateAccount -- Triggered when user clicks on \"Create Account\" button.\n    //Custom data checking ensures user account under this email does not \n    //already exist and that the rest of the info is valid. We create a new  \n    // object for user, save it to localStorage and take user to app's \n    //landing page. \n    handleCreateAccount = async (event) =>{\n        event.preventDefault();\n        const url = '/users/' + this.state.accountName;\n        const accountInfo = {\n            displayName: this.state.displayName,\n            password: this.state.accountPassword,\n            profilePicURL: this.state.profilePicURL,\n            securityQuestion: this.state.accountSecurityQuestion,\n            securityAnswer: this.state.accountSecurityAnswer,\n        };\n        const res = await fetch(url, {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n                },\n            method: 'POST',\n            body: JSON.stringify(accountInfo)}); \n        if (res.status == 200) { //successful account creation!\n            this.props.accountCreateStatus(\"New account created! Enter credentials to log in.\");\n        } else { //Unsuccessful account creation\n            //Grab textual error message\n            const resText = await res.text();\n            this.props.accountCreateStatus(resText);\n        }\n    }\n\n    render() {\n    return (\n    <div className=\"modal\" role=\"dialog\">\n        <div className=\"modal-dialog modal-lg\">\n        <div className=\"modal-content\">\n            <div className=\"modal-header\">\n            <center>\n            <h3 className=\"modal-title\"><b>Create New Account</b></h3>\n            </center>\n            <button className=\"close\" \n                onClick={this.props.cancelCreateAccount}>\n                &times;</button>\n            </div>\n            <div className=\"modal-body\">\n            <form onSubmit={this.handleCreateAccount}>\n            <label>\n                Email: \n                <input\n                className=\"form-control form-text form-center\"\n                name=\"accountName\"\n                type=\"email\"\n                size=\"35\"\n                placeholder=\"Enter Email Address\"\n                pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\n                required={true}\n                ref={this.newUserRef}\n                value={this.state.accountName}\n                onChange={this.handleNewAccountChange}\n                onBlur={this.setDefaultDisplayName}\n                />\n            </label>\n            <label>\n                Password:\n                <input\n                className=\"form-control form-text form-center\"\n                name=\"accountPassword\"\n                type=\"password\"\n                size=\"35\"\n                placeholder=\"Enter Password\"\n                pattern=\n                \"(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$\"\n                required={true}\n                value={this.state.accountPassword}\n                onChange={this.handleNewAccountChange}\n                />\n            </label>\n            <label>\n                Repeat Password:\n                <input\n                className=\"form-control form-text form-center\"\n                name=\"accountPasswordRepeat\"\n                type=\"password\"\n                size=\"35\"\n                placeholder=\"Repeat Password\"\n                required={true}\n                ref={this.repeatPassRef}\n                value={this.state.accountPasswordRepeat}\n                onChange={this.handleNewAccountChange}\n                />\n            </label>\n            <label>\n                Display Name:\n                <input\n                className=\"form-control form-text form-center\"\n                name=\"displayName\"\n                type=\"text\"\n                size=\"30\"\n                placeholder=\"Display Name\"\n                required={true}\n                value={this.state.displayName}\n                onChange={this.handleNewAccountChange}\n                />\n            </label>\n            <label>\n                Profile Picture:<br/>\n                <input\n                className=\"form-control form-text form-center\"\n                name=\"profilePic\"\n                type=\"file\"\n                accept=\"image/x-png,image/gif,image/jpeg\" \n                ref={this.profilePicRef}\n                value={this.state.profilePic}\n                onChange={this.handleNewAccountChange}\n                />\n                <img src={this.state.profilePicURL} \n                        height=\"60\" width=\"60\" />\n            </label> \n            <label>\n                Security Question:\n                <textarea\n                className=\"form-control form-text form-center\"\n                name=\"accountSecurityQuestion\"\n                size=\"35\"\n                placeholder=\"Security Question\"\n                rows=\"2\"\n                cols=\"35\"\n                maxLength=\"100\"\n                required={true}\n                value={this.state.accountSecurityQuestion}\n                onChange={this.handleNewAccountChange}\n                />\n            </label>\n            <label>\n                Answer to Security Question:\n                <textarea\n                className=\"form-control form-text form-center\"\n                name=\"accountSecurityAnswer\"\n                type=\"text\"\n                placeholder=\"Answer\"\n                rows=\"2\"\n                cols=\"35\"\n                maxLength=\"100\"\n                required={true}\n                value={this.state.accountSecurityAnswer}\n                onChange={this.handleNewAccountChange}\n                />\n            </label>\n            <br/>\n            <button role=\"submit\" \n                className=\"btn btn-primary btn-color-theme modal-submit-btn\">\n                <span className=\"fa fa-user-plus\"></span>&nbsp;Create Account\n            </button>\n            </form>\n            </div>\n        </div>\n        </div>\n    </div>\n    );\n    }\n    }\n\nexport default CreateAccountDialog;"]},"metadata":{},"sourceType":"module"}