{"ast":null,"code":"import _regeneratorRuntime from\"/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import BackGroundImage from'./../FIFA-logo.jpg';import Papa from'papaparse';import*as d3 from\"d3\";var ResultDisplayPage=/*#__PURE__*/function(_React$Component){_inherits(ResultDisplayPage,_React$Component);function ResultDisplayPage(){var _this;_classCallCheck(this,ResultDisplayPage);_this=_possibleConstructorReturn(this,_getPrototypeOf(ResultDisplayPage).call(this));_this.myRef=React.createRef();_this.state={gameResultHome:[],gameResultAway:[],gameResult:[],gameResultTrend:[],gameResultX:[]};_this.dataset=[100,200,300,400,500];return _this;}_createClass(ResultDisplayPage,[{key:\"componentDidMount\",value:function componentDidMount(){console.log(this.myRef);this.readDataBase();}// const data_url = \"acdata.csv\";\n},{key:\"getData\",value:function(){var _getData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(URL){var papaParsePromise,response,blob,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// create a function that returns a Promise that resolves when papa parse complete is called\npapaParsePromise=function papaParsePromise(blob){return new Promise(function(resolve){return Papa.parse(blob,{complete:resolve});});};_context.next=3;return fetch(URL);case 3:response=_context.sent;_context.next=6;return response.blob();case 6:blob=_context.sent;_context.next=9;return papaParsePromise(blob);case 9:data=_context.sent;return _context.abrupt(\"return\",data);case 11:case\"end\":return _context.stop();}}},_callee);}));function getData(_x){return _getData.apply(this,arguments);}return getData;}()},{key:\"readDataBase\",value:function(){var _readDataBase=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _this2=this;var season,parsed_data,matchesData,games,_loop,i,scoreDiff;return _regeneratorRuntime.wrap(function _callee2$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:season=this.props.season;_context3.next=3;return this.getData('./sortDate_matches.csv');case 3:parsed_data=_context3.sent;matchesData=parsed_data.data;// matchesData = d3.sort(matchesData.date)\ngames=1;_loop=/*#__PURE__*/_regeneratorRuntime.mark(function _loop(){var matchesDataSplit,parseTime,time,timeFormat,normalDate;return _regeneratorRuntime.wrap(function _loop$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:matchesDataSplit=matchesData[i];if(!(matchesDataSplit[2]===season)){_context2.next=20;break;}parseTime=d3.timeParse('%Y-%m-%d %I:%M:%S');// parse time\ntime=parseTime(matchesDataSplit[4]);timeFormat=d3.timeFormat('%Y/%m/%d');normalDate=timeFormat(time);console.log(normalDate);if(!(matchesDataSplit[6]===10260)){_context2.next=15;break;}// home team\nscoreDiff=matchesDataSplit[8]-matchesDataSplit[9];// gameResult store score_diff\n// gameResult store numb\n_context2.next=11;return _this2.setState(function(prevState){return{gameResult:prevState.gameResult.concat(scoreDiff)};});case 11:_context2.next=13;return _this2.setState(function(prevState){return{gameResultX:prevState.gameResultX.concat(matchesDataSplit[23])};});case 13:_context2.next=20;break;case 15:scoreDiff=matchesDataSplit[9]-matchesDataSplit[8];_context2.next=18;return _this2.setState(function(prevState){return{gameResult:prevState.gameResult.concat(scoreDiff)};});case 18:_context2.next=20;return _this2.setState(function(prevState){return{gameResultX:prevState.gameResultX.concat(matchesDataSplit[23])};});case 20:case\"end\":return _context2.stop();}}},_loop);});i=0;case 8:if(!(i<matchesData.length)){_context3.next=13;break;}return _context3.delegateYield(_loop(),\"t0\",10);case 10:++i;_context3.next=8;break;case 13:// console.log(matchesData);\nconsole.log(this.state.gameResult,this.state.gameResultX);// this.displayD3();\ncase 14:case\"end\":return _context3.stop();}}},_callee2,this);}));function readDataBase(){return _readDataBase.apply(this,arguments);}return readDataBase;}()},{key:\"displayD3\",value:function displayD3(){var size=500;// let svg = d3.select(this.myRef.current)\n//             .append('svg')\n//             .text('Hello from D3')\n//             .attr('width', size)\n//             .attr('height', size);\n//             let rect_width = 95;\n// svg.selectAll('rect')\n//     .data(this.dataset)\n//     .enter()\n//     .append('rect')\n//     .attr('x', (d, i) => 5 + i*(rect_width + 5))\n//     .attr('y', d => (size - d))\n//     .attr('width', rect_width)\n//     .attr('height', d => d)\n//     .attr('fill', 'teal');\nvar svg=d3.select(this.myRef.current);var svgWidth=600,svgHeight=400;var margin={top:20,right:20,bottom:30,left:50};var width=svgWidth-margin.left-margin.right;var height=svgHeight-margin.top-margin.bottom;// var svg = d3.select('svg')     \n//             .attr(\"width\", svgWidth)     \n//             .attr(\"height\", svgHeight);\n}},{key:\"render\",value:function render(){return React.createElement(\"div\",{className:\"padded-page FIFA_wrap\"},React.createElement(\"center\",null,React.createElement(\"div\",{id:\"SelectLeague\",className:\"dropdown\"},React.createElement(\"h2\",null,\"Result\"),React.createElement(\"img\",{src:BackGroundImage,alt:\"bg\"}),React.createElement(\"p\",null),React.createElement(\"p\",null)),React.createElement(\"div\",{ref:this.myRef}),React.createElement(\"p\",{style:{fontStyle:\"italic\"}},\"\\xA9Version CptS 575 Final Project\")));}}]);return ResultDisplayPage;}(React.Component);export default ResultDisplayPage;","map":{"version":3,"sources":["/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/src/components/ReultDisplay.js"],"names":["React","BackGroundImage","Papa","d3","ResultDisplayPage","myRef","createRef","state","gameResultHome","gameResultAway","gameResult","gameResultTrend","gameResultX","dataset","console","log","readDataBase","URL","papaParsePromise","blob","Promise","resolve","parse","complete","fetch","response","data","season","props","getData","parsed_data","matchesData","games","matchesDataSplit","i","parseTime","timeParse","time","timeFormat","normalDate","scoreDiff","setState","prevState","concat","length","size","svg","select","current","svgWidth","svgHeight","margin","top","right","bottom","left","width","height","fontStyle","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport BackGroundImage from './../FIFA-logo.jpg';\nimport Papa from 'papaparse';\nimport * as d3 from \"d3\";\n\n\nclass ResultDisplayPage extends React.Component {\n\n    constructor(){\n        super();\n        this.myRef = React.createRef(); \n        this.state = {\n            gameResultHome: [],\n            gameResultAway: [],\n            gameResult: [],\n            gameResultTrend: [],\n            gameResultX:[]\n        }\n        this.dataset= [100,200,300,400,500]\n    }\n    componentDidMount(){ \n        console.log(this.myRef);\n        this.readDataBase();\n    }\n\n    // const data_url = \"acdata.csv\";\n    async getData(URL) {\n        // create a function that returns a Promise that resolves when papa parse complete is called\n        const papaParsePromise = blob => new Promise(resolve => Papa.parse(blob, { complete: resolve }));\n        const response = await fetch(URL);\n        const blob = await response.blob();\n        const data = await papaParsePromise(blob);\n        return data;\n    };\n\n    async readDataBase() {\n        const season = this.props.season;\n        const parsed_data = await this.getData('./sortDate_matches.csv');\n        const matchesData = parsed_data.data;\n        // matchesData = d3.sort(matchesData.date)\n        var games = 1;\n        for(var i = 0; i < matchesData.length; ++i){\n            const matchesDataSplit = matchesData[i];\n            if (matchesDataSplit[2] === season){\n                const parseTime = d3.timeParse('%Y-%m-%d %I:%M:%S'); // parse time\n                const time = parseTime(matchesDataSplit[4])\n                const timeFormat = d3.timeFormat('%Y/%m/%d')\n                const normalDate = timeFormat(time);\n                console.log(normalDate)\n                if (matchesDataSplit[6] === 10260){ // home team\n                    var scoreDiff = matchesDataSplit[8] - matchesDataSplit[9];\n                    // gameResult store score_diff\n                    // gameResult store numb\n                    await this.setState(prevState => ({ gameResult: prevState.gameResult.concat(scoreDiff)}));\n                    await this.setState(prevState => ({ gameResultX: prevState.gameResultX.concat(matchesDataSplit[23])}));\n                    // games = games + 1;\n                }\n                else{\n                    var scoreDiff = matchesDataSplit[9] - matchesDataSplit[8];\n                    await this.setState(prevState => ({ gameResult: prevState.gameResult.concat(scoreDiff)}));\n                    await this.setState(prevState => ({ gameResultX: prevState.gameResultX.concat(matchesDataSplit[23])}));\n                    // games = games + 1;\n                }\n                \n            }\n        }\n        // console.log(matchesData);\n        console.log(this.state.gameResult, this.state.gameResultX);\n        // this.displayD3();\n    }\n    displayD3(){\n        let size = 500;\n        // let svg = d3.select(this.myRef.current)\n        //             .append('svg')\n        //             .text('Hello from D3')\n        //             .attr('width', size)\n        //             .attr('height', size);\n        //             let rect_width = 95;\n        // svg.selectAll('rect')\n        //     .data(this.dataset)\n        //     .enter()\n        //     .append('rect')\n        //     .attr('x', (d, i) => 5 + i*(rect_width + 5))\n        //     .attr('y', d => (size - d))\n        //     .attr('width', rect_width)\n        //     .attr('height', d => d)\n        //     .attr('fill', 'teal');\n\n        let svg = d3.select(this.myRef.current)\n        var svgWidth = 600, svgHeight = 400; \n        var margin = { top: 20, right: 20, bottom: 30, left: 50 };   \n        var width = svgWidth - margin.left - margin.right;   \n        var height = svgHeight - margin.top - margin.bottom;\n\n        // var svg = d3.select('svg')     \n        //             .attr(\"width\", svgWidth)     \n        //             .attr(\"height\", svgHeight);\n    }\n\n\n    render() {\n        return (\n        <div className=\"padded-page FIFA_wrap\">\n            <center>\n            <div id = \"SelectLeague\" className = \"dropdown\">\n                <h2>Result</h2>\n                <img src={BackGroundImage} alt=\"bg\"></img>\n                <p></p>\n                <p></p>\n                {/* <p style={{fontStyle: \"italic\"}}>Version CptS 575 Final Project</p> */}\n            </div>\n            <div ref={this.myRef}>\n            </div>\n            <p style={{fontStyle: \"italic\"}}>&copy;Version CptS 575 Final Project</p>\n            </center>\n        </div>\n        );\n    }   \n}\n\nexport default ResultDisplayPage;"]},"metadata":{},"sourceType":"module"}