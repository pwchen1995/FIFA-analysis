{"ast":null,"code":"import _classCallCheck from\"/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import AppMode from'./../AppMode.js';var RoundsTable=/*#__PURE__*/function(_React$Component){_inherits(RoundsTable,_React$Component);function RoundsTable(){var _getPrototypeOf2;var _this;_classCallCheck(this,RoundsTable);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(RoundsTable)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.editRound=function(id){_this.props.setEditId(id);_this.props.changeMode(AppMode.ROUNDS_EDITROUND);};_this.confirmDelete=function(id){_this.props.setDeleteId(id);alert(\"Confirm Delete Goes here!\");};_this.renderTable=function(){var table=[];var _loop=function _loop(r){table.push(React.createElement(\"tr\",{key:r},React.createElement(\"td\",null,_this.props.rounds[r].date.substring(0,10)),React.createElement(\"td\",null,_this.props.rounds[r].course),React.createElement(\"td\",null,Number(_this.props.rounds[r].strokes)+Number(_this.props.rounds[r].minutes)+\":\"+(_this.props.rounds[r].seconds<10?\"0\"+_this.props.rounds[r].seconds:_this.props.rounds[r].seconds)+\" (\"+_this.props.rounds[r].strokes+\" in \"+_this.props.rounds[r].minutes+\":\"+(_this.props.rounds[r].seconds<10?\"0\"+_this.props.rounds[r].seconds:_this.props.rounds[r].seconds)+\")\"),React.createElement(\"td\",null,React.createElement(\"button\",{onClick:_this.props.menuOpen?null:function(){return _this.editRound(r);}},React.createElement(\"span\",{className:\"fa fa-eye\"}))),React.createElement(\"td\",null,React.createElement(\"button\",{onClick:_this.props.menuOpen?null:function(){return _this.confirmDelete(r);}},React.createElement(\"span\",{className:\"fa fa-trash\"})))));};for(var r=0;r<_this.props.rounds.length;++r){_loop(r);}return table;};return _this;}_createClass(RoundsTable,[{key:\"render\",//render--render the entire rounds table with header, displaying a \"No\n//Rounds Logged\" message in case the table is empty.\nvalue:function render(){return React.createElement(\"div\",{className:\"padded-page\"},React.createElement(\"h1\",null),React.createElement(\"table\",{className:\"table table-hover\"},React.createElement(\"thead\",{className:\"thead-light\"},React.createElement(\"tr\",null,React.createElement(\"th\",null,\"Date\"),React.createElement(\"th\",null,\"Course\"),React.createElement(\"th\",null,\"Score\"),React.createElement(\"th\",null,\"View/Edit...\"),React.createElement(\"th\",null,\"Delete\"))),React.createElement(\"tbody\",null,Object.keys(this.props.rounds).length===0?React.createElement(\"tr\",null,React.createElement(\"td\",{colSpan:\"5\",style:{fontStyle:\"italic\"}},\"No rounds logged\")):this.renderTable())));}}]);return RoundsTable;}(React.Component);export default RoundsTable;","map":{"version":3,"sources":["/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/src/components/RoundsTable.js"],"names":["React","AppMode","RoundsTable","editRound","id","props","setEditId","changeMode","ROUNDS_EDITROUND","confirmDelete","setDeleteId","alert","renderTable","table","r","push","rounds","date","substring","course","Number","strokes","minutes","seconds","menuOpen","length","Object","keys","fontStyle","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport AppMode from './../AppMode.js';\n\nclass RoundsTable extends React.Component {\n\n  //editRound -- Triggered when the user clicks the edit button for a given\n  //round. The id param is the unique property that identifies the round.\n  //Set the state variable representing the id of the round to be edited and\n  //then switch to the ROUNDS_EDITROUND mode to allow the user to edit the\n  //chosen round.\n  editRound = (id) => {\n    this.props.setEditId(id);\n    this.props.changeMode(AppMode.ROUNDS_EDITROUND);\n  }\n\n  //confirmDelete -- Triggered when the user clicks the delete button\n  //for a given round. The id paam is the unique property that \n  //identifies the round. Set the state variable representing the id\n  //of the round to be deleted and then present a dialog box asking\n  //the user to confirm the deletion.\n  //TO DO: Implement the confirmation dialog box. For now, we\n  //present alert box placeholder\n  confirmDelete = (id) => {\n    this.props.setDeleteId(id);\n    alert(\"Confirm Delete Goes here!\");\n  }\n\n\n  //renderTable -- render an HTML table displaying the rounds logged\n  //by the current user and providing buttons to view/edit and delete each round.\n  renderTable = () => {\n  let table = [];\n  for (let r = 0; r < this.props.rounds.length; ++r) {\n    table.push(\n      <tr key={r}>\n        <td>{this.props.rounds[r].date.substring(0,10)}</td>\n        <td>{this.props.rounds[r].course}</td>\n        <td>{(Number(this.props.rounds[r].strokes) + \n              Number(this.props.rounds[r].minutes)) +\n              \":\" + (this.props.rounds[r].seconds < 10 ?  \n                \"0\" + this.props.rounds[r].seconds :\n                this.props.rounds[r].seconds) + \" (\" + \n              this.props.rounds[r].strokes + \n              \" in \" + this.props.rounds[r].minutes + \":\" + \n              (this.props.rounds[r].seconds < 10 ?  \n                \"0\" + this.props.rounds[r].seconds :\n                this.props.rounds[r].seconds) + \")\"}\n        </td>\n        <td><button onClick={this.props.menuOpen ? null : () => \n          this.editRound(r)}>\n              <span className=\"fa fa-eye\"></span></button></td>\n        <td><button onClick={this.props.menuOpen ? null : \n          () => this.confirmDelete(r)}>\n              <span className=\"fa fa-trash\"></span></button></td>\n      </tr> \n    );\n  }\n  return table;\n  }\n\n  //render--render the entire rounds table with header, displaying a \"No\n  //Rounds Logged\" message in case the table is empty.\n  render() {\n    return(\n    <div className=\"padded-page\">\n      <h1></h1>\n      <table className=\"table table-hover\">\n        <thead className=\"thead-light\">\n        <tr>\n          <th>Date</th>\n          <th>Course</th>\n          <th>Score</th>\n          <th>View/Edit...</th>\n          <th>Delete</th>\n        </tr>\n        </thead>\n        <tbody>\n          {Object.keys(this.props.rounds).length === 0 ? \n          <tr>\n          <td colSpan=\"5\" style={{fontStyle: \"italic\"}}>No rounds logged</td>\n          </tr> : this.renderTable()\n          }\n        </tbody>\n      </table>\n    </div>\n    );\n  }\n}\n\nexport default RoundsTable;\n"]},"metadata":{},"sourceType":"module"}