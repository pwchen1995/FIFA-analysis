{"ast":null,"code":"import _regeneratorRuntime from\"/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import NavBar from'./NavBar.js';import SideMenu from'./SideMenu.js';import AppMode from\"./../AppMode.js\";import LeaguePage from'./LeaguePage.js';import TeamsPage from'./TeamsPage.js';import AboutBox from'./AboutBox.js';import SeasonsPage from'./SeasonsPage.js';import Analyze from'./Analyze.js';import{CSVReader}from'react-papaparse';import Papa from'papaparse';import*as d3 from\"d3\";// import LeaguesFile from './../leagues.csv'\nvar LeaguesFile='leagues.csv';// var LeaguePath = './../leagues.csv';\n// var LeagueFile = 'leagues.csv';\n// var LeagueURL = LeaguePath + LeagueFile;\nvar modeTitle={};modeTitle[AppMode.LEAGUE]=\"FIFA Analysis\";modeTitle[AppMode.TEAMS]=\"FIFA Analysis\";modeTitle[AppMode.SEASONS]=\"FIFA Analysis\";var modeToPage={};modeToPage[AppMode.LEAGUE]=LeaguePage;modeToPage[AppMode.TEAMS]=TeamsPage;modeToPage[AppMode.SEASONS]=TeamsPage;var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);function App(){var _this;_classCallCheck(this,App);_this=_possibleConstructorReturn(this,_getPrototypeOf(App).call(this));_this.handleChangeMode=function(newMode){_this.setState({mode:newMode});};_this.openMenu=function(){_this.setState({menuOpen:true});};_this.closeMenu=function(){_this.setState({menuOpen:false});};_this.toggleMenuOpen=function(){_this.setState(function(prevState){return{menuOpen:!prevState.menuOpen};});};_this.closeAboutDialog=function(){_this.setState({showAbout:false});};_this.showAboutDialog=function(){_this.setState({showAbout:true});};_this.selectLeague=function(league){_this.setState({selectedLeague:false});_this.setState({selectedTeam:true});_this.setState({League:league});//alert(\"League Selected\");\n_this.queryThroughLeague(league);console.log(\"League Selected: \"+league);};_this.queryThroughLeague=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(league){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:Papa.parse(LeaguesFile,{complete:function complete(results){console.log(\"Finished:\",results.data);}});case 1:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.selectTeam=function(team){_this.setState({selectedTeam:false});_this.setState({selectedSeason:true});_this.setState({Team:team});//alert(\"League Selected\");\n// this.queryThroughTeam(Team);\nconsole.log(\"Team Selected: \"+team);};_this.queryThroughTeam=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(league){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:d3.csv(LeaguesFile,/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data){var id;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(data.name===league){id=data.id;leagueID=id;console.log(leagueID);this.setID(id);}case 1:case\"end\":return _context2.stop();}}},_callee2,this);}));return function(_x3){return _ref3.apply(this,arguments);};}().bind(_assertThisInitialized(_this)));case 1:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x2){return _ref2.apply(this,arguments);};}();_this.setID=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return _this.setState({leagueID:id});case 2:console.log(_this.state.leagueID);case 3:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x4){return _ref4.apply(this,arguments);};}();_this.selectSeason=function(season){_this.setState({selectedSeason:false});_this.setState({Analyze:true});_this.setState({Season:season});//alert(\"League Selected\");\nconsole.log(\"Season Selected: \"+season);};_this.read_file=function(){d3.csv(LeaguesFile,function(data){// var newdata = JSON.stringify(data);\n// console.log(JSON.stringify(data));\n// console.log(data.name);\n});};_this.setID=_this.setID.bind(_assertThisInitialized(_this));_this.state={mode:AppMode.LEAGUE,menuOpen:false,showAbout:false,selectedLeague:true,League:\"\",selectedTeam:false,Team:\"\",selectedSeason:false,Season:\"\",Analyze:false,LeagueID:\"\"};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){}},{key:\"render\",// d3.csv(dataUrl, function(data){\n//   console.table(data); //用table的方式在console呈現json\n//   d3.select('.demo').text(JSON.stringify(data)) //把json寫到.demo上\n// });\nvalue:function render(){// const ModePage = modeToPage[this.state.mode];\nthis.read_file();return React.createElement(\"div\",null,this.state.showAbout===true?React.createElement(AboutBox,{closeAbout:this.closeAboutDialog}):null,React.createElement(NavBar,{title:modeTitle[this.state.mode],mode:this.state.mode,changeMode:this.handleChangeMode,menuOpen:this.state.menuOpen,toggleMenuOpen:this.toggleMenuOpen,showAbout:this.showAboutDialog}),React.createElement(SideMenu,{menuOpen:this.state.menuOpen,mode:this.state.mode,toggleMenuOpen:this.toggleMenuOpen,showAbout:this.showAboutDialog}),this.state.selectedLeague===true?React.createElement(LeaguePage,{menuOpen:this.state.menuOpen,mode:this.state.mode,selectLeague:this.selectLeague,changeMode:this.handleChangeMode}):null,this.state.selectedTeam===true?React.createElement(TeamsPage,{menuOpen:this.state.menuOpen,mode:this.state.mode,selectTeam:this.selectTeam,League:this.state.League,changeMode:this.handleChangeMode}):null,this.state.selectedSeason===true?React.createElement(SeasonsPage,{menuOpen:this.state.menuOpen,mode:this.state.mode,selectSeason:this.selectSeason,League:this.state.League,Team:this.state.Team,changeMode:this.handleChangeMode}):null,this.state.Analyze===true?React.createElement(Analyze,{menuOpen:this.state.menuOpen,mode:this.state.mode,selectSeason:this.selectSeason,League:this.state.League,Team:this.state.Team,Season:this.state.Season,changeMode:this.handleChangeMode}):null);}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/src/components/App.js"],"names":["React","NavBar","SideMenu","AppMode","LeaguePage","TeamsPage","AboutBox","SeasonsPage","Analyze","CSVReader","Papa","d3","LeaguesFile","modeTitle","LEAGUE","TEAMS","SEASONS","modeToPage","App","handleChangeMode","newMode","setState","mode","openMenu","menuOpen","closeMenu","toggleMenuOpen","prevState","closeAboutDialog","showAbout","showAboutDialog","selectLeague","league","selectedLeague","selectedTeam","League","queryThroughLeague","console","log","parse","complete","results","data","selectTeam","team","selectedSeason","Team","queryThroughTeam","csv","name","id","leagueID","setID","bind","state","selectSeason","season","Season","read_file","LeagueID","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport NavBar from './NavBar.js';\nimport SideMenu from './SideMenu.js';\nimport AppMode from \"./../AppMode.js\"\nimport LeaguePage from './LeaguePage.js';\nimport TeamsPage from './TeamsPage.js';\nimport AboutBox from './AboutBox.js';\nimport SeasonsPage from './SeasonsPage.js';\nimport Analyze from './Analyze.js';\nimport { CSVReader } from 'react-papaparse';\nimport Papa from 'papaparse';\nimport * as d3 from \"d3\";\n \n// import LeaguesFile from './../leagues.csv'\nvar LeaguesFile = 'leagues.csv';\n\n// var LeaguePath = './../leagues.csv';\n// var LeagueFile = 'leagues.csv';\n// var LeagueURL = LeaguePath + LeagueFile;\n\nconst modeTitle = {};\nmodeTitle[AppMode.LEAGUE] = \"FIFA Analysis\";\nmodeTitle[AppMode.TEAMS] = \"FIFA Analysis\";\nmodeTitle[AppMode.SEASONS] = \"FIFA Analysis\";\n\nconst modeToPage = {};\nmodeToPage[AppMode.LEAGUE] = LeaguePage;\nmodeToPage[AppMode.TEAMS] = TeamsPage;\nmodeToPage[AppMode.SEASONS] = TeamsPage;\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.setID = this.setID.bind(this);\n    this.state = {mode: AppMode.LEAGUE,\n                  menuOpen: false,\n                  showAbout: false,\n                  selectedLeague: true,\n                  League: \"\",\n                  selectedTeam: false,\n                  Team: \"\",\n                  selectedSeason: false,\n                  Season: \"\",\n                  Analyze: false,\n                  LeagueID: \"\"};\n  }\n  componentDidMount() {\n  }\n  \n  handleChangeMode = (newMode) => {\n    this.setState({mode: newMode});\n  }\n\n  openMenu = () => {\n    this.setState({menuOpen : true});\n  }\n  \n  closeMenu = () => {\n    this.setState({menuOpen : false});\n  }\n\n  toggleMenuOpen = () => {\n    this.setState(prevState => ({menuOpen: !prevState.menuOpen}));\n  }\n\n  closeAboutDialog = () =>{\n    this.setState({showAbout: false});\n  }\n  showAboutDialog = () => {\n    this.setState({showAbout: true});\n  }\n  ///////////////////////////////////////////////////\n  // SELECT league and retrieve league ID. \n  // Then query through matches table to find team ID\n  ///////////////////////////////////////////////////\n  selectLeague = (league) =>{\n    this.setState({selectedLeague: false});\n    this.setState({selectedTeam: true});\n    this.setState({League: league});\n    //alert(\"League Selected\");\n    this.queryThroughLeague(league);\n    console.log(\"League Selected: \" + league)\n  }\n  // Find the league ID and set state's ID\n  queryThroughLeague = async (league) =>{\n    Papa.parse(LeaguesFile, {\n      complete: function(results) {\n        console.log(\"Finished:\", results.data);\n      }\n    });\n  }\n\n  ///////////////////////////////////////////////////\n  // SELECT league and retrieve league ID. \n  // Then query through matches table to find team ID\n  ///////////////////////////////////////////////////\n  selectTeam = (team) =>{\n    this.setState({selectedTeam: false});\n    this.setState({selectedSeason: true});\n    this.setState({Team: team});\n    //alert(\"League Selected\");\n    // this.queryThroughTeam(Team);\n    console.log(\"Team Selected: \" + team)\n  }\n  // Find the Team id and set state id\n  queryThroughTeam = async (league) =>{\n    d3.csv(LeaguesFile, async function(data) {\n      if (data.name === league){\n        var id = data.id;\n        leagueID = id;\n        console.log(leagueID);\n        this.setID(id);\n      }\n    }.bind(this));\n  }\n  setID = async (id) =>{\n    await this.setState({leagueID: id});\n    console.log(this.state.leagueID)\n  }\n  selectSeason = (season) =>{\n    this.setState({selectedSeason: false});\n    this.setState({Analyze: true});\n    this.setState({Season: season});\n    //alert(\"League Selected\");\n    console.log(\"Season Selected: \" + season)\n  }\n  \n\n\nread_file = () =>{\n  d3.csv(LeaguesFile, function(data) {\n    // var newdata = JSON.stringify(data);\n    // console.log(JSON.stringify(data));\n    // console.log(data.name);\n  });\n}\n// d3.csv(dataUrl, function(data){\n//   console.table(data); //用table的方式在console呈現json\n//   d3.select('.demo').text(JSON.stringify(data)) //把json寫到.demo上\n// });\n\n  render() {\n    // const ModePage = modeToPage[this.state.mode];\n    this.read_file()\n    return (\n      <div>\n        {this.state.showAbout === true? <AboutBox closeAbout={this.closeAboutDialog}/>: null}\n        <NavBar \n          title={modeTitle[this.state.mode]} \n          mode={this.state.mode}\n          changeMode={this.handleChangeMode}\n          menuOpen={this.state.menuOpen}\n          toggleMenuOpen={this.toggleMenuOpen}\n          showAbout={this.showAboutDialog}/>\n          <SideMenu \n            menuOpen = {this.state.menuOpen}\n            mode={this.state.mode}\n            toggleMenuOpen={this.toggleMenuOpen}\n            showAbout={this.showAboutDialog}/>\n          {this.state.selectedLeague === true ? \n          <LeaguePage\n          menuOpen={this.state.menuOpen}\n          mode={this.state.mode}\n          selectLeague={this.selectLeague}\n          changeMode={this.handleChangeMode}/>:null}\n          {this.state.selectedTeam === true ?\n          <TeamsPage\n          menuOpen={this.state.menuOpen}\n          mode={this.state.mode}\n          selectTeam={this.selectTeam}\n          League={this.state.League}\n          changeMode={this.handleChangeMode}/>:null}\n          {this.state.selectedSeason === true ? \n          <SeasonsPage\n          menuOpen={this.state.menuOpen}\n          mode={this.state.mode}\n          selectSeason={this.selectSeason}\n          League={this.state.League}\n          Team={this.state.Team}\n          changeMode={this.handleChangeMode}/>: null}\n          {this.state.Analyze === true ? \n          <Analyze\n          menuOpen={this.state.menuOpen}\n          mode={this.state.mode}\n          selectSeason={this.selectSeason}\n          League={this.state.League}\n          Team={this.state.Team}\n          Season={this.state.Season}\n          changeMode={this.handleChangeMode}/>: null}\n          {/* <ModePage \n            menuOpen={this.state.menuOpen}\n            mode={this.state.mode}\n            selectLeague={this.selectLeague}\n            changeMode={this.handleChangeMode}/> */}\n        </div>\n        \n    );  \n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}