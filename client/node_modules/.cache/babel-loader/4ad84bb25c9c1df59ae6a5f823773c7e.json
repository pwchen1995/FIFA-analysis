{"ast":null,"code":"var _jsxFileName = \"/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/src/components/App.js\";\nimport React from 'react';\nimport NavBar from './NavBar.js';\nimport SideMenu from './SideMenu.js';\nimport AppMode from \"./../AppMode.js\";\nimport LeaguePage from './LeaguePage.js';\nimport TeamsPage from './TeamsPage.js';\nimport AboutBox from './AboutBox.js';\nimport SeasonsPage from './SeasonsPage.js';\nimport Analyze from './Analyze.js';\nimport { CSVReader } from 'react-papaparse';\nimport Papa from 'papaparse';\nimport * as d3 from \"d3\"; // import LeaguesFile from './../leagues.csv'\n\nvar LeaguesFile = './leagues.csv'; // var LeaguePath = './../leagues.csv';\n// var LeagueFile = 'leagues.csv';\n// var LeagueURL = LeaguePath + LeagueFile;\n\nconst modeTitle = {};\nmodeTitle[AppMode.LEAGUE] = \"FIFA Analysis\";\nmodeTitle[AppMode.TEAMS] = \"FIFA Analysis\";\nmodeTitle[AppMode.SEASONS] = \"FIFA Analysis\";\nconst modeToPage = {};\nmodeToPage[AppMode.LEAGUE] = LeaguePage;\nmodeToPage[AppMode.TEAMS] = TeamsPage;\nmodeToPage[AppMode.SEASONS] = TeamsPage;\n\nclass App extends React.Component {\n  constructor() {\n    super(); // this.getData = this.getData.bind(this);\n\n    this.handleChangeMode = newMode => {\n      this.setState({\n        mode: newMode\n      });\n    };\n\n    this.openMenu = () => {\n      this.setState({\n        menuOpen: true\n      });\n    };\n\n    this.closeMenu = () => {\n      this.setState({\n        menuOpen: false\n      });\n    };\n\n    this.toggleMenuOpen = () => {\n      this.setState(prevState => ({\n        menuOpen: !prevState.menuOpen\n      }));\n    };\n\n    this.closeAboutDialog = () => {\n      this.setState({\n        showAbout: false\n      });\n    };\n\n    this.showAboutDialog = () => {\n      this.setState({\n        showAbout: true\n      });\n    };\n\n    this.selectLeague = league => {\n      this.setState({\n        selectedLeague: false\n      });\n      this.setState({\n        selectedTeam: true\n      });\n      this.setState({\n        League: league\n      }); //alert(\"League Selected\");\n\n      this.queryThroughLeague(league);\n      console.log(\"League Selected: \" + league);\n    };\n\n    this.queryThroughLeague = async league => {\n      const data = Papa.parse((await fetchCsv()));\n      const leagueData = data.data; // console.log(leagueData);\n\n      async function fetchCsv() {\n        const response = await fetch('./leagues.csv');\n        const reader = response.body.getReader();\n        const result = await reader.read();\n        const decoder = new TextDecoder('utf-8');\n        const csv = await decoder.decode(result.value); // console.log('csv', csv);\n\n        return csv;\n      }\n\n      for (var i = 0; i < leagueData.length; ++i) {\n        const leagueDataSplit = leagueData[i];\n\n        if (leagueDataSplit[2] === league) {\n          await this.setState({\n            leagueID: leagueDataSplit[0]\n          });\n          console.log(leagueDataSplit[0], this.state.leagueID);\n        }\n      }\n    };\n\n    this.selectTeam = team => {\n      this.setState({\n        selectedTeam: false\n      });\n      this.setState({\n        selectedSeason: true\n      });\n      this.setState({\n        Team: team\n      }); //alert(\"League Selected\");\n      // this.queryThroughTeam(Team);\n\n      console.log(\"Team Selected: \" + team);\n    };\n\n    this.handleTeam = async team => {\n      console.log(\"App.js receive \" + team);\n      await this.setState({\n        teamID: team\n      });\n    };\n\n    this.selectSeason = season => {\n      this.setState({\n        selectedSeason: false\n      });\n      this.setState({\n        Analyze: true\n      });\n      this.setState({\n        Season: season\n      }); //alert(\"League Selected\");\n\n      console.log(\"Season Selected: \" + season);\n    };\n\n    this.read_file = () => {\n      d3.csv(LeaguesFile, function (data) {// var newdata = JSON.stringify(data);\n        // console.log(JSON.stringify(data));\n        // console.log(data.name);\n      });\n    };\n\n    this.state = {\n      mode: AppMode.LEAGUE,\n      menuOpen: false,\n      showAbout: false,\n      selectedLeague: true,\n      League: \"\",\n      selectedTeam: false,\n      Team: \"\",\n      selectedSeason: false,\n      Season: \"\",\n      Analyze: false,\n      data: [],\n      leagueID: \"\",\n      //selected league ID will later be used for searching team\n      teamID: []\n    };\n  }\n\n  componentDidMount() {}\n\n  // d3.csv(dataUrl, function(data){\n  //   console.table(data); //用table的方式在console呈現json\n  //   d3.select('.demo').text(JSON.stringify(data)) //把json寫到.demo上\n  // });\n  render() {\n    // const ModePage = modeToPage[this.state.mode];\n    this.read_file();\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, this.state.showAbout === true ? React.createElement(AboutBox, {\n      closeAbout: this.closeAboutDialog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }) : null, React.createElement(NavBar, {\n      title: modeTitle[this.state.mode],\n      mode: this.state.mode,\n      changeMode: this.handleChangeMode,\n      menuOpen: this.state.menuOpen,\n      toggleMenuOpen: this.toggleMenuOpen,\n      showAbout: this.showAboutDialog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(SideMenu, {\n      menuOpen: this.state.menuOpen,\n      mode: this.state.mode,\n      toggleMenuOpen: this.toggleMenuOpen,\n      showAbout: this.showAboutDialog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), this.state.selectedLeague === true ? React.createElement(LeaguePage, {\n      menuOpen: this.state.menuOpen,\n      mode: this.state.mode,\n      selectLeague: this.selectLeague,\n      changeMode: this.handleChangeMode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }) : null, this.state.selectedTeam === true ? React.createElement(TeamsPage, {\n      menuOpen: this.state.menuOpen,\n      mode: this.state.mode,\n      selectTeam: this.selectTeam,\n      handleTeam: this.handleTeam,\n      League: this.state.League,\n      LeagueID: this.state.leagueID,\n      changeMode: this.handleChangeMode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }) : null, this.state.selectedSeason === true ? React.createElement(SeasonsPage, {\n      menuOpen: this.state.menuOpen,\n      mode: this.state.mode,\n      selectSeason: this.selectSeason,\n      League: this.state.League,\n      Team: this.state.Team,\n      teamID: this.state.teamID,\n      changeMode: this.handleChangeMode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }) : null, this.state.Analyze === true ? React.createElement(Analyze, {\n      menuOpen: this.state.menuOpen,\n      mode: this.state.mode,\n      selectSeason: this.selectSeason,\n      League: this.state.League,\n      Team: this.state.Team,\n      Season: this.state.Season,\n      changeMode: this.handleChangeMode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/src/components/App.js"],"names":["React","NavBar","SideMenu","AppMode","LeaguePage","TeamsPage","AboutBox","SeasonsPage","Analyze","CSVReader","Papa","d3","LeaguesFile","modeTitle","LEAGUE","TEAMS","SEASONS","modeToPage","App","Component","constructor","handleChangeMode","newMode","setState","mode","openMenu","menuOpen","closeMenu","toggleMenuOpen","prevState","closeAboutDialog","showAbout","showAboutDialog","selectLeague","league","selectedLeague","selectedTeam","League","queryThroughLeague","console","log","data","parse","fetchCsv","leagueData","response","fetch","reader","body","getReader","result","read","decoder","TextDecoder","csv","decode","value","i","length","leagueDataSplit","leagueID","state","selectTeam","team","selectedSeason","Team","handleTeam","teamID","selectSeason","season","Season","read_file","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB,C,CAEA;;AACA,IAAIC,WAAW,GAAG,eAAlB,C,CAEA;AACA;AACA;;AAEA,MAAMC,SAAS,GAAG,EAAlB;AACAA,SAAS,CAACV,OAAO,CAACW,MAAT,CAAT,GAA4B,eAA5B;AACAD,SAAS,CAACV,OAAO,CAACY,KAAT,CAAT,GAA2B,eAA3B;AACAF,SAAS,CAACV,OAAO,CAACa,OAAT,CAAT,GAA6B,eAA7B;AAEA,MAAMC,UAAU,GAAG,EAAnB;AACAA,UAAU,CAACd,OAAO,CAACW,MAAT,CAAV,GAA6BV,UAA7B;AACAa,UAAU,CAACd,OAAO,CAACY,KAAT,CAAV,GAA4BV,SAA5B;AACAY,UAAU,CAACd,OAAO,CAACa,OAAT,CAAV,GAA8BX,SAA9B;;AAEA,MAAMa,GAAN,SAAkBlB,KAAK,CAACmB,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,GAAG;AACZ,YADY,CAEZ;;AAFY,SAoBdC,gBApBc,GAoBMC,OAAD,IAAa;AAC9B,WAAKC,QAAL,CAAc;AAACC,QAAAA,IAAI,EAAEF;AAAP,OAAd;AACD,KAtBa;;AAAA,SAwBdG,QAxBc,GAwBH,MAAM;AACf,WAAKF,QAAL,CAAc;AAACG,QAAAA,QAAQ,EAAG;AAAZ,OAAd;AACD,KA1Ba;;AAAA,SA4BdC,SA5Bc,GA4BF,MAAM;AAChB,WAAKJ,QAAL,CAAc;AAACG,QAAAA,QAAQ,EAAG;AAAZ,OAAd;AACD,KA9Ba;;AAAA,SAgCdE,cAhCc,GAgCG,MAAM;AACrB,WAAKL,QAAL,CAAcM,SAAS,KAAK;AAACH,QAAAA,QAAQ,EAAE,CAACG,SAAS,CAACH;AAAtB,OAAL,CAAvB;AACD,KAlCa;;AAAA,SAoCdI,gBApCc,GAoCK,MAAK;AACtB,WAAKP,QAAL,CAAc;AAACQ,QAAAA,SAAS,EAAE;AAAZ,OAAd;AACD,KAtCa;;AAAA,SAuCdC,eAvCc,GAuCI,MAAM;AACtB,WAAKT,QAAL,CAAc;AAACQ,QAAAA,SAAS,EAAE;AAAZ,OAAd;AACD,KAzCa;;AAAA,SA+CdE,YA/Cc,GA+CEC,MAAD,IAAW;AACxB,WAAKX,QAAL,CAAc;AAACY,QAAAA,cAAc,EAAE;AAAjB,OAAd;AACA,WAAKZ,QAAL,CAAc;AAACa,QAAAA,YAAY,EAAE;AAAf,OAAd;AACA,WAAKb,QAAL,CAAc;AAACc,QAAAA,MAAM,EAAEH;AAAT,OAAd,EAHwB,CAIxB;;AACA,WAAKI,kBAAL,CAAwBJ,MAAxB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBN,MAAlC;AACD,KAtDa;;AAAA,SAwDdI,kBAxDc,GAwDO,MAAOJ,MAAP,IAAiB;AACpC,YAAMO,IAAI,GAAG/B,IAAI,CAACgC,KAAL,EAAW,MAAMC,QAAQ,EAAzB,EAAb;AACA,YAAMC,UAAU,GAAGH,IAAI,CAACA,IAAxB,CAFoC,CAGpC;;AAEA,qBAAeE,QAAf,GAA0B;AACtB,cAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAD,CAA5B;AACA,cAAMC,MAAM,GAAGF,QAAQ,CAACG,IAAT,CAAcC,SAAd,EAAf;AACA,cAAMC,MAAM,GAAG,MAAMH,MAAM,CAACI,IAAP,EAArB;AACA,cAAMC,OAAO,GAAG,IAAIC,WAAJ,CAAgB,OAAhB,CAAhB;AACA,cAAMC,GAAG,GAAG,MAAMF,OAAO,CAACG,MAAR,CAAeL,MAAM,CAACM,KAAtB,CAAlB,CALsB,CAMtB;;AACA,eAAOF,GAAP;AACH;;AAED,WAAI,IAAIG,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGb,UAAU,CAACc,MAA9B,EAAsC,EAAED,CAAxC,EAA0C;AACxC,cAAME,eAAe,GAAGf,UAAU,CAACa,CAAD,CAAlC;;AACA,YAAGE,eAAe,CAAC,CAAD,CAAf,KAAuBzB,MAA1B,EAAiC;AAC/B,gBAAM,KAAKX,QAAL,CAAc;AAACqC,YAAAA,QAAQ,EAAED,eAAe,CAAC,CAAD;AAA1B,WAAd,CAAN;AACApB,UAAAA,OAAO,CAACC,GAAR,CAAYmB,eAAe,CAAC,CAAD,CAA3B,EAAgC,KAAKE,KAAL,CAAWD,QAA3C;AACD;AACF;AACF,KA9Ea;;AAAA,SAqFdE,UArFc,GAqFAC,IAAD,IAAS;AACpB,WAAKxC,QAAL,CAAc;AAACa,QAAAA,YAAY,EAAE;AAAf,OAAd;AACA,WAAKb,QAAL,CAAc;AAACyC,QAAAA,cAAc,EAAE;AAAjB,OAAd;AACA,WAAKzC,QAAL,CAAc;AAAC0C,QAAAA,IAAI,EAAEF;AAAP,OAAd,EAHoB,CAIpB;AACA;;AACAxB,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBuB,IAAhC;AACD,KA5Fa;;AAAA,SA6FdG,UA7Fc,GA6FD,MAAMH,IAAN,IAAe;AAC1BxB,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBuB,IAAhC;AACA,YAAM,KAAKxC,QAAL,CAAc;AAAC4C,QAAAA,MAAM,EAAEJ;AAAT,OAAd,CAAN;AACD,KAhGa;;AAAA,SAiGdK,YAjGc,GAiGEC,MAAD,IAAW;AACxB,WAAK9C,QAAL,CAAc;AAACyC,QAAAA,cAAc,EAAE;AAAjB,OAAd;AACA,WAAKzC,QAAL,CAAc;AAACf,QAAAA,OAAO,EAAE;AAAV,OAAd;AACA,WAAKe,QAAL,CAAc;AAAC+C,QAAAA,MAAM,EAAED;AAAT,OAAd,EAHwB,CAIxB;;AACA9B,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsB6B,MAAlC;AACD,KAvGa;;AAAA,SA2GhBE,SA3GgB,GA2GJ,MAAK;AACf5D,MAAAA,EAAE,CAAC2C,GAAH,CAAO1C,WAAP,EAAoB,UAAS6B,IAAT,EAAe,CACjC;AACA;AACA;AACD,OAJD;AAKD,KAjHe;;AAGZ,SAAKoB,KAAL,GAAa;AAACrC,MAAAA,IAAI,EAAErB,OAAO,CAACW,MAAf;AACCY,MAAAA,QAAQ,EAAE,KADX;AAECK,MAAAA,SAAS,EAAE,KAFZ;AAGCI,MAAAA,cAAc,EAAE,IAHjB;AAICE,MAAAA,MAAM,EAAE,EAJT;AAKCD,MAAAA,YAAY,EAAE,KALf;AAMC6B,MAAAA,IAAI,EAAE,EANP;AAOCD,MAAAA,cAAc,EAAE,KAPjB;AAQCM,MAAAA,MAAM,EAAE,EART;AASC9D,MAAAA,OAAO,EAAE,KATV;AAUCiC,MAAAA,IAAI,EAAE,EAVP;AAWCmB,MAAAA,QAAQ,EAAE,EAXX;AAWe;AACdO,MAAAA,MAAM,EAAC;AAZR,KAAb;AAaD;;AACDK,EAAAA,iBAAiB,GAAG,CACnB;;AAgGH;AACA;AACA;AACA;AAEEC,EAAAA,MAAM,GAAG;AACP;AACA,SAAKF,SAAL;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKV,KAAL,CAAW9B,SAAX,KAAyB,IAAzB,GAA+B,oBAAC,QAAD;AAAU,MAAA,UAAU,EAAE,KAAKD,gBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA/B,GAA+E,IADlF,EAEE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAEjB,SAAS,CAAC,KAAKgD,KAAL,CAAWrC,IAAZ,CADlB;AAEE,MAAA,IAAI,EAAE,KAAKqC,KAAL,CAAWrC,IAFnB;AAGE,MAAA,UAAU,EAAE,KAAKH,gBAHnB;AAIE,MAAA,QAAQ,EAAE,KAAKwC,KAAL,CAAWnC,QAJvB;AAKE,MAAA,cAAc,EAAE,KAAKE,cALvB;AAME,MAAA,SAAS,EAAE,KAAKI,eANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EASI,oBAAC,QAAD;AACE,MAAA,QAAQ,EAAI,KAAK6B,KAAL,CAAWnC,QADzB;AAEE,MAAA,IAAI,EAAE,KAAKmC,KAAL,CAAWrC,IAFnB;AAGE,MAAA,cAAc,EAAE,KAAKI,cAHvB;AAIE,MAAA,SAAS,EAAE,KAAKI,eAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,EAcK,KAAK6B,KAAL,CAAW1B,cAAX,KAA8B,IAA9B,GACD,oBAAC,UAAD;AACA,MAAA,QAAQ,EAAE,KAAK0B,KAAL,CAAWnC,QADrB;AAEA,MAAA,IAAI,EAAE,KAAKmC,KAAL,CAAWrC,IAFjB;AAGA,MAAA,YAAY,EAAE,KAAKS,YAHnB;AAIA,MAAA,UAAU,EAAE,KAAKZ,gBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADC,GAKoC,IAnBzC,EAoBK,KAAKwC,KAAL,CAAWzB,YAAX,KAA4B,IAA5B,GACD,oBAAC,SAAD;AACA,MAAA,QAAQ,EAAE,KAAKyB,KAAL,CAAWnC,QADrB;AAEA,MAAA,IAAI,EAAE,KAAKmC,KAAL,CAAWrC,IAFjB;AAGA,MAAA,UAAU,EAAE,KAAKsC,UAHjB;AAIA,MAAA,UAAU,EAAE,KAAKI,UAJjB;AAKA,MAAA,MAAM,EAAE,KAAKL,KAAL,CAAWxB,MALnB;AAMA,MAAA,QAAQ,EAAE,KAAKwB,KAAL,CAAWD,QANrB;AAOA,MAAA,UAAU,EAAE,KAAKvC,gBAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADC,GAQoC,IA5BzC,EA6BK,KAAKwC,KAAL,CAAWG,cAAX,KAA8B,IAA9B,GACD,oBAAC,WAAD;AACA,MAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWnC,QADrB;AAEA,MAAA,IAAI,EAAE,KAAKmC,KAAL,CAAWrC,IAFjB;AAGA,MAAA,YAAY,EAAE,KAAK4C,YAHnB;AAIA,MAAA,MAAM,EAAE,KAAKP,KAAL,CAAWxB,MAJnB;AAKA,MAAA,IAAI,EAAE,KAAKwB,KAAL,CAAWI,IALjB;AAMA,MAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWM,MANnB;AAOA,MAAA,UAAU,EAAE,KAAK9C,gBAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADC,GAQqC,IArC1C,EAsCK,KAAKwC,KAAL,CAAWrD,OAAX,KAAuB,IAAvB,GACD,oBAAC,OAAD;AACA,MAAA,QAAQ,EAAE,KAAKqD,KAAL,CAAWnC,QADrB;AAEA,MAAA,IAAI,EAAE,KAAKmC,KAAL,CAAWrC,IAFjB;AAGA,MAAA,YAAY,EAAE,KAAK4C,YAHnB;AAIA,MAAA,MAAM,EAAE,KAAKP,KAAL,CAAWxB,MAJnB;AAKA,MAAA,IAAI,EAAE,KAAKwB,KAAL,CAAWI,IALjB;AAMA,MAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWS,MANnB;AAOA,MAAA,UAAU,EAAE,KAAKjD,gBAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADC,GAQqC,IA9C1C,CADF;AAwDD;;AApL+B;;AAuLlC,eAAeH,GAAf","sourcesContent":["import React from 'react';\nimport NavBar from './NavBar.js';\nimport SideMenu from './SideMenu.js';\nimport AppMode from \"./../AppMode.js\"\nimport LeaguePage from './LeaguePage.js';\nimport TeamsPage from './TeamsPage.js';\nimport AboutBox from './AboutBox.js';\nimport SeasonsPage from './SeasonsPage.js';\nimport Analyze from './Analyze.js';\nimport { CSVReader } from 'react-papaparse';\nimport Papa from 'papaparse';\nimport * as d3 from \"d3\";\n \n// import LeaguesFile from './../leagues.csv'\nvar LeaguesFile = './leagues.csv';\n\n// var LeaguePath = './../leagues.csv';\n// var LeagueFile = 'leagues.csv';\n// var LeagueURL = LeaguePath + LeagueFile;\n\nconst modeTitle = {};\nmodeTitle[AppMode.LEAGUE] = \"FIFA Analysis\";\nmodeTitle[AppMode.TEAMS] = \"FIFA Analysis\";\nmodeTitle[AppMode.SEASONS] = \"FIFA Analysis\";\n\nconst modeToPage = {};\nmodeToPage[AppMode.LEAGUE] = LeaguePage;\nmodeToPage[AppMode.TEAMS] = TeamsPage;\nmodeToPage[AppMode.SEASONS] = TeamsPage;\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    // this.getData = this.getData.bind(this);\n    this.state = {mode: AppMode.LEAGUE,\n                  menuOpen: false,\n                  showAbout: false,\n                  selectedLeague: true,\n                  League: \"\",\n                  selectedTeam: false,\n                  Team: \"\",\n                  selectedSeason: false,\n                  Season: \"\",\n                  Analyze: false,\n                  data: [],\n                  leagueID: \"\", //selected league ID will later be used for searching team\n                  teamID:[]};\n  }\n  componentDidMount() {\n  }\n  \n  handleChangeMode = (newMode) => {\n    this.setState({mode: newMode});\n  }\n\n  openMenu = () => {\n    this.setState({menuOpen : true});\n  }\n  \n  closeMenu = () => {\n    this.setState({menuOpen : false});\n  }\n\n  toggleMenuOpen = () => {\n    this.setState(prevState => ({menuOpen: !prevState.menuOpen}));\n  }\n\n  closeAboutDialog = () =>{\n    this.setState({showAbout: false});\n  }\n  showAboutDialog = () => {\n    this.setState({showAbout: true});\n  }\n\n  ///////////////////////////////////////////////////\n  // SELECT league and retrieve league ID. \n  // Then query through matches table to find team ID\n  ///////////////////////////////////////////////////\n  selectLeague = (league) =>{\n    this.setState({selectedLeague: false});\n    this.setState({selectedTeam: true});\n    this.setState({League: league});\n    //alert(\"League Selected\");\n    this.queryThroughLeague(league);\n    console.log(\"League Selected: \" + league)\n  }\n  // Find the league ID and set state's ID\n  queryThroughLeague = async (league) =>{\n    const data = Papa.parse(await fetchCsv());\n    const leagueData = data.data;\n    // console.log(leagueData);\n    \n    async function fetchCsv() {\n        const response = await fetch('./leagues.csv');\n        const reader = response.body.getReader();\n        const result = await reader.read();\n        const decoder = new TextDecoder('utf-8');\n        const csv = await decoder.decode(result.value);\n        // console.log('csv', csv);\n        return csv;\n    }\n\n    for(var i = 0; i < leagueData.length; ++i){\n      const leagueDataSplit = leagueData[i]\n      if(leagueDataSplit[2] === league){\n        await this.setState({leagueID: leagueDataSplit[0]});\n        console.log(leagueDataSplit[0], this.state.leagueID);\n      }\n    }\n  }\n\n\n  ///////////////////////////////////////////////////\n  // SELECT league and retrieve league ID. \n  // Then query through matches table to find team ID\n  ///////////////////////////////////////////////////\n  selectTeam = (team) =>{\n    this.setState({selectedTeam: false});\n    this.setState({selectedSeason: true});\n    this.setState({Team: team});\n    //alert(\"League Selected\");\n    // this.queryThroughTeam(Team);\n    console.log(\"Team Selected: \" + team)\n  }\n  handleTeam = async(team) => {\n    console.log(\"App.js receive \" + team);\n    await this.setState({teamID: team});\n  }\n  selectSeason = (season) =>{\n    this.setState({selectedSeason: false});\n    this.setState({Analyze: true});\n    this.setState({Season: season});\n    //alert(\"League Selected\");\n    console.log(\"Season Selected: \" + season)\n  }\n  \n\n\nread_file = () =>{\n  d3.csv(LeaguesFile, function(data) {\n    // var newdata = JSON.stringify(data);\n    // console.log(JSON.stringify(data));\n    // console.log(data.name);\n  });\n}\n// d3.csv(dataUrl, function(data){\n//   console.table(data); //用table的方式在console呈現json\n//   d3.select('.demo').text(JSON.stringify(data)) //把json寫到.demo上\n// });\n\n  render() {\n    // const ModePage = modeToPage[this.state.mode];\n    this.read_file()\n    return (\n      <div>\n        {this.state.showAbout === true? <AboutBox closeAbout={this.closeAboutDialog}/>: null}\n        <NavBar \n          title={modeTitle[this.state.mode]} \n          mode={this.state.mode}\n          changeMode={this.handleChangeMode}\n          menuOpen={this.state.menuOpen}\n          toggleMenuOpen={this.toggleMenuOpen}\n          showAbout={this.showAboutDialog}/>\n          <SideMenu \n            menuOpen = {this.state.menuOpen}\n            mode={this.state.mode}\n            toggleMenuOpen={this.toggleMenuOpen}\n            showAbout={this.showAboutDialog}/>\n          {this.state.selectedLeague === true ? \n          <LeaguePage\n          menuOpen={this.state.menuOpen}\n          mode={this.state.mode}\n          selectLeague={this.selectLeague}\n          changeMode={this.handleChangeMode}/>:null}\n          {this.state.selectedTeam === true ?\n          <TeamsPage\n          menuOpen={this.state.menuOpen}\n          mode={this.state.mode}\n          selectTeam={this.selectTeam}\n          handleTeam={this.handleTeam}\n          League={this.state.League}\n          LeagueID={this.state.leagueID}\n          changeMode={this.handleChangeMode}/>:null}\n          {this.state.selectedSeason === true ? \n          <SeasonsPage\n          menuOpen={this.state.menuOpen}\n          mode={this.state.mode}\n          selectSeason={this.selectSeason}\n          League={this.state.League}\n          Team={this.state.Team}\n          teamID={this.state.teamID}\n          changeMode={this.handleChangeMode}/>: null}\n          {this.state.Analyze === true ? \n          <Analyze\n          menuOpen={this.state.menuOpen}\n          mode={this.state.mode}\n          selectSeason={this.selectSeason}\n          League={this.state.League}\n          Team={this.state.Team}\n          Season={this.state.Season}\n          changeMode={this.handleChangeMode}/>: null}\n          {/* <ModePage \n            menuOpen={this.state.menuOpen}\n            mode={this.state.mode}\n            selectLeague={this.selectLeague}\n            changeMode={this.handleChangeMode}/> */}\n        </div>\n        \n    );  \n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}