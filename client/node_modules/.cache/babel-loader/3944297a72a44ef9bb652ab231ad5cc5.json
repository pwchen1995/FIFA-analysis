{"ast":null,"code":"import _regeneratorRuntime from\"/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import NavBar from'./NavBar.js';import SideMenu from'./SideMenu.js';import AppMode from\"./../AppMode.js\";import LeaguePage from'./LeaguePage.js';import TeamsPage from'./TeamsPage.js';import AboutBox from'./AboutBox.js';import SeasonsPage from'./SeasonsPage.js';import Analyze from'./Analyze.js';import{CSVReader}from'react-papaparse';import Papa from'papaparse';import*as d3 from\"d3\";// import LeaguesFile from './../leagues.csv'\nvar LeaguesFile='./leagues.csv';// var LeaguePath = './../leagues.csv';\n// var LeagueFile = 'leagues.csv';\n// var LeagueURL = LeaguePath + LeagueFile;\nvar modeTitle={};modeTitle[AppMode.LEAGUE]=\"FIFA Analysis\";modeTitle[AppMode.TEAMS]=\"FIFA Analysis\";modeTitle[AppMode.SEASONS]=\"FIFA Analysis\";var modeToPage={};modeToPage[AppMode.LEAGUE]=LeaguePage;modeToPage[AppMode.TEAMS]=TeamsPage;modeToPage[AppMode.SEASONS]=TeamsPage;var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);function App(){var _this;_classCallCheck(this,App);_this=_possibleConstructorReturn(this,_getPrototypeOf(App).call(this));_this.handleChangeMode=function(newMode){_this.setState({mode:newMode});};_this.openMenu=function(){_this.setState({menuOpen:true});};_this.closeMenu=function(){_this.setState({menuOpen:false});};_this.toggleMenuOpen=function(){_this.setState(function(prevState){return{menuOpen:!prevState.menuOpen};});};_this.closeAboutDialog=function(){_this.setState({showAbout:false});};_this.showAboutDialog=function(){_this.setState({showAbout:true});};_this.selectLeague=function(league){_this.setState({selectedLeague:false});_this.setState({selectedTeam:true});_this.setState({League:league});//alert(\"League Selected\");\n_this.queryThroughLeague(league);console.log(\"League Selected: \"+league);};_this.queryThroughLeague=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(league){var data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0=Papa;_context.next=3;return fetchCsv();case 3:_context.t1=_context.sent;data=_context.t0.parse.call(_context.t0,_context.t1);console.log(data.length);case 6:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.selectTeam=function(team){_this.setState({selectedTeam:false});_this.setState({selectedSeason:true});_this.setState({Team:team});//alert(\"League Selected\");\n// this.queryThroughTeam(Team);\nconsole.log(\"Team Selected: \"+team);};_this.selectSeason=function(season){_this.setState({selectedSeason:false});_this.setState({Analyze:true});_this.setState({Season:season});//alert(\"League Selected\");\nconsole.log(\"Season Selected: \"+season);};_this.read_file=function(){d3.csv(LeaguesFile,function(data){// var newdata = JSON.stringify(data);\n// console.log(JSON.stringify(data));\n// console.log(data.name);\n});};_this.getData=_this.getData.bind(_assertThisInitialized(_this));_this.state={mode:AppMode.LEAGUE,menuOpen:false,showAbout:false,selectedLeague:true,League:\"\",selectedTeam:false,Team:\"\",selectedSeason:false,Season:\"\",Analyze:false,data:[]};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){}},{key:\"fetchCsv\",value:function(){var _fetchCsv=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var response,reader,result,decoder,csv;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch('./leagues.csv');case 2:response=_context2.sent;reader=response.body.getReader();_context2.next=6;return reader.read();case 6:result=_context2.sent;decoder=new TextDecoder('utf-8');_context2.next=10;return decoder.decode(result.value);case 10:csv=_context2.sent;console.log('csv',csv);return _context2.abrupt(\"return\",csv);case 13:case\"end\":return _context2.stop();}}},_callee2);}));function fetchCsv(){return _fetchCsv.apply(this,arguments);}return fetchCsv;}()},{key:\"getData\",value:function(){var _getData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(result){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return this.setState({data:result.data});case 2:console.log(this.state.data);case 3:case\"end\":return _context3.stop();}}},_callee3,this);}));function getData(_x2){return _getData.apply(this,arguments);}return getData;}()///////////////////////////////////////////////////\n// SELECT league and retrieve league ID. \n// Then query through matches table to find team ID\n///////////////////////////////////////////////////\n},{key:\"render\",// d3.csv(dataUrl, function(data){\n//   console.table(data); //用table的方式在console呈現json\n//   d3.select('.demo').text(JSON.stringify(data)) //把json寫到.demo上\n// });\nvalue:function render(){// const ModePage = modeToPage[this.state.mode];\nthis.read_file();return React.createElement(\"div\",null,this.state.showAbout===true?React.createElement(AboutBox,{closeAbout:this.closeAboutDialog}):null,React.createElement(NavBar,{title:modeTitle[this.state.mode],mode:this.state.mode,changeMode:this.handleChangeMode,menuOpen:this.state.menuOpen,toggleMenuOpen:this.toggleMenuOpen,showAbout:this.showAboutDialog}),React.createElement(SideMenu,{menuOpen:this.state.menuOpen,mode:this.state.mode,toggleMenuOpen:this.toggleMenuOpen,showAbout:this.showAboutDialog}),this.state.selectedLeague===true?React.createElement(LeaguePage,{menuOpen:this.state.menuOpen,mode:this.state.mode,selectLeague:this.selectLeague,changeMode:this.handleChangeMode}):null,this.state.selectedTeam===true?React.createElement(TeamsPage,{menuOpen:this.state.menuOpen,mode:this.state.mode,selectTeam:this.selectTeam,League:this.state.League,changeMode:this.handleChangeMode}):null,this.state.selectedSeason===true?React.createElement(SeasonsPage,{menuOpen:this.state.menuOpen,mode:this.state.mode,selectSeason:this.selectSeason,League:this.state.League,Team:this.state.Team,changeMode:this.handleChangeMode}):null,this.state.Analyze===true?React.createElement(Analyze,{menuOpen:this.state.menuOpen,mode:this.state.mode,selectSeason:this.selectSeason,League:this.state.League,Team:this.state.Team,Season:this.state.Season,changeMode:this.handleChangeMode}):null);}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/src/components/App.js"],"names":["React","NavBar","SideMenu","AppMode","LeaguePage","TeamsPage","AboutBox","SeasonsPage","Analyze","CSVReader","Papa","d3","LeaguesFile","modeTitle","LEAGUE","TEAMS","SEASONS","modeToPage","App","handleChangeMode","newMode","setState","mode","openMenu","menuOpen","closeMenu","toggleMenuOpen","prevState","closeAboutDialog","showAbout","showAboutDialog","selectLeague","league","selectedLeague","selectedTeam","League","queryThroughLeague","console","log","fetchCsv","data","parse","length","selectTeam","team","selectedSeason","Team","selectSeason","season","Season","read_file","csv","getData","bind","state","fetch","response","reader","body","getReader","read","result","decoder","TextDecoder","decode","value","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport NavBar from './NavBar.js';\nimport SideMenu from './SideMenu.js';\nimport AppMode from \"./../AppMode.js\"\nimport LeaguePage from './LeaguePage.js';\nimport TeamsPage from './TeamsPage.js';\nimport AboutBox from './AboutBox.js';\nimport SeasonsPage from './SeasonsPage.js';\nimport Analyze from './Analyze.js';\nimport { CSVReader } from 'react-papaparse';\nimport Papa from 'papaparse';\nimport * as d3 from \"d3\";\n \n// import LeaguesFile from './../leagues.csv'\nvar LeaguesFile = './leagues.csv';\n\n// var LeaguePath = './../leagues.csv';\n// var LeagueFile = 'leagues.csv';\n// var LeagueURL = LeaguePath + LeagueFile;\n\nconst modeTitle = {};\nmodeTitle[AppMode.LEAGUE] = \"FIFA Analysis\";\nmodeTitle[AppMode.TEAMS] = \"FIFA Analysis\";\nmodeTitle[AppMode.SEASONS] = \"FIFA Analysis\";\n\nconst modeToPage = {};\nmodeToPage[AppMode.LEAGUE] = LeaguePage;\nmodeToPage[AppMode.TEAMS] = TeamsPage;\nmodeToPage[AppMode.SEASONS] = TeamsPage;\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.getData = this.getData.bind(this);\n    this.state = {mode: AppMode.LEAGUE,\n                  menuOpen: false,\n                  showAbout: false,\n                  selectedLeague: true,\n                  League: \"\",\n                  selectedTeam: false,\n                  Team: \"\",\n                  selectedSeason: false,\n                  Season: \"\",\n                  Analyze: false,\n                  data: []};\n  }\n  componentDidMount() {\n  }\n  \n  handleChangeMode = (newMode) => {\n    this.setState({mode: newMode});\n  }\n\n  openMenu = () => {\n    this.setState({menuOpen : true});\n  }\n  \n  closeMenu = () => {\n    this.setState({menuOpen : false});\n  }\n\n  toggleMenuOpen = () => {\n    this.setState(prevState => ({menuOpen: !prevState.menuOpen}));\n  }\n\n  closeAboutDialog = () =>{\n    this.setState({showAbout: false});\n  }\n  showAboutDialog = () => {\n    this.setState({showAbout: true});\n  }\n\n  ///////////////////////////////////////////////////\n  // SELECT league and retrieve league ID. \n  // Then query through matches table to find team ID\n  ///////////////////////////////////////////////////\n  selectLeague = (league) =>{\n    this.setState({selectedLeague: false});\n    this.setState({selectedTeam: true});\n    this.setState({League: league});\n    //alert(\"League Selected\");\n    this.queryThroughLeague(league);\n    console.log(\"League Selected: \" + league)\n  }\n  // Find the league ID and set state's ID\n  queryThroughLeague = async (league) =>{\n    const data = Papa.parse(await fetchCsv());\n    console.log(data.length);\n    \n   \n  }\n   async fetchCsv() {\n        const response = await fetch('./leagues.csv');\n        const reader = response.body.getReader();\n        const result = await reader.read();\n        const decoder = new TextDecoder('utf-8');\n        const csv = await decoder.decode(result.value);\n        console.log('csv', csv);\n        return csv;\n  }\n\n  async getData(result) {\n    await this.setState({data: result.data});\n    console.log(this.state.data)\n  }\n\n  ///////////////////////////////////////////////////\n  // SELECT league and retrieve league ID. \n  // Then query through matches table to find team ID\n  ///////////////////////////////////////////////////\n  selectTeam = (team) =>{\n    this.setState({selectedTeam: false});\n    this.setState({selectedSeason: true});\n    this.setState({Team: team});\n    //alert(\"League Selected\");\n    // this.queryThroughTeam(Team);\n    console.log(\"Team Selected: \" + team)\n  }\n  selectSeason = (season) =>{\n    this.setState({selectedSeason: false});\n    this.setState({Analyze: true});\n    this.setState({Season: season});\n    //alert(\"League Selected\");\n    console.log(\"Season Selected: \" + season)\n  }\n  \n\n\nread_file = () =>{\n  d3.csv(LeaguesFile, function(data) {\n    // var newdata = JSON.stringify(data);\n    // console.log(JSON.stringify(data));\n    // console.log(data.name);\n  });\n}\n// d3.csv(dataUrl, function(data){\n//   console.table(data); //用table的方式在console呈現json\n//   d3.select('.demo').text(JSON.stringify(data)) //把json寫到.demo上\n// });\n\n  render() {\n    // const ModePage = modeToPage[this.state.mode];\n    this.read_file()\n    return (\n      <div>\n        {this.state.showAbout === true? <AboutBox closeAbout={this.closeAboutDialog}/>: null}\n        <NavBar \n          title={modeTitle[this.state.mode]} \n          mode={this.state.mode}\n          changeMode={this.handleChangeMode}\n          menuOpen={this.state.menuOpen}\n          toggleMenuOpen={this.toggleMenuOpen}\n          showAbout={this.showAboutDialog}/>\n          <SideMenu \n            menuOpen = {this.state.menuOpen}\n            mode={this.state.mode}\n            toggleMenuOpen={this.toggleMenuOpen}\n            showAbout={this.showAboutDialog}/>\n          {this.state.selectedLeague === true ? \n          <LeaguePage\n          menuOpen={this.state.menuOpen}\n          mode={this.state.mode}\n          selectLeague={this.selectLeague}\n          changeMode={this.handleChangeMode}/>:null}\n          {this.state.selectedTeam === true ?\n          <TeamsPage\n          menuOpen={this.state.menuOpen}\n          mode={this.state.mode}\n          selectTeam={this.selectTeam}\n          League={this.state.League}\n          changeMode={this.handleChangeMode}/>:null}\n          {this.state.selectedSeason === true ? \n          <SeasonsPage\n          menuOpen={this.state.menuOpen}\n          mode={this.state.mode}\n          selectSeason={this.selectSeason}\n          League={this.state.League}\n          Team={this.state.Team}\n          changeMode={this.handleChangeMode}/>: null}\n          {this.state.Analyze === true ? \n          <Analyze\n          menuOpen={this.state.menuOpen}\n          mode={this.state.mode}\n          selectSeason={this.selectSeason}\n          League={this.state.League}\n          Team={this.state.Team}\n          Season={this.state.Season}\n          changeMode={this.handleChangeMode}/>: null}\n          {/* <ModePage \n            menuOpen={this.state.menuOpen}\n            mode={this.state.mode}\n            selectLeague={this.selectLeague}\n            changeMode={this.handleChangeMode}/> */}\n        </div>\n        \n    );  \n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}