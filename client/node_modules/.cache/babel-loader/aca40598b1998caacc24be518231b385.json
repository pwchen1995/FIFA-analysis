{"ast":null,"code":"import _classCallCheck from\"/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import NavBar from'./NavBar.js';import SideMenu from'./SideMenu.js';import AppMode from\"./../AppMode.js\";import LeaguePage from'./LeaguePage.js';import TeamsPage from'./TeamsPage.js';import AboutBox from'./AboutBox.js';import SeasonsPage from'./SeasonsPage.js';import Analyze from'./Analyze.js';import{CSVReader}from'react-papaparse';// import LeaguesFile from './../leagues.csv'\n// var LeaguesFile = './../leagues.csv';\nvar modeTitle={};modeTitle[AppMode.LEAGUE]=\"FIFA Analysis\";modeTitle[AppMode.TEAMS]=\"FIFA Analysis\";modeTitle[AppMode.SEASONS]=\"FIFA Analysis\";var modeToPage={};modeToPage[AppMode.LEAGUE]=LeaguePage;modeToPage[AppMode.TEAMS]=TeamsPage;modeToPage[AppMode.SEASONS]=TeamsPage;var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);function App(){var _this;_classCallCheck(this,App);_this=_possibleConstructorReturn(this,_getPrototypeOf(App).call(this));_this.getData=function(){// do something to fetch data from a remote API.\n// console.log(\"Root: \" + this.state.League)\n};_this.handleChangeMode=function(newMode){_this.setState({mode:newMode});};_this.openMenu=function(){_this.setState({menuOpen:true});};_this.closeMenu=function(){_this.setState({menuOpen:false});};_this.toggleMenuOpen=function(){_this.setState(function(prevState){return{menuOpen:!prevState.menuOpen};});};_this.closeAboutDialog=function(){_this.setState({showAbout:false});};_this.showAboutDialog=function(){_this.setState({showAbout:true});};_this.selectLeague=function(league){_this.setState({selectedLeague:false});_this.setState({selectedTeam:true});_this.setState({League:league});//alert(\"League Selected\");\nconsole.log(\"League Selected: \"+league);};_this.selectTeam=function(team){_this.setState({selectedTeam:false});_this.setState({selectedSeason:true});_this.setState({Team:team});//alert(\"League Selected\");\nconsole.log(\"Team Selected: \"+team);};_this.selectSeason=function(season){_this.setState({selectedSeason:false});_this.setState({Analyze:true});_this.setState({Season:season});//alert(\"League Selected\");\nconsole.log(\"Season Selected: \"+season);};_this.handleFiles=function(files){var reader=new FileReader();reader.onload=function(e){// Use reader.result\nalert(reader.result);};reader.readAsText(files[0]);};_this.handleFiles=function(files){var reader=new FileReader();reader.onload=function(e){// Use reader.result\nalert(reader.result);};reader.readAsText(files[0]);};_this.state={mode:AppMode.LEAGUE,menuOpen:false,showAbout:false,selectedLeague:true,League:\"\",selectedTeam:false,Team:\"\",selectedSeason:false,Season:\"\",Analyze:false};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){// need to make the initial call to getData() to populate\n// data right away\nthis.getData();// Now we need to make it run at a specified interval\nsetInterval(this.getData,5000);// runs every 5 seconds.\n}},{key:\"render\",value:function render(){// const ModePage = modeToPage[this.state.mode];\n// console.log(LeaguesFile);\nreturn React.createElement(\"div\",null,this.state.showAbout===true?React.createElement(AboutBox,{closeAbout:this.closeAboutDialog}):null,React.createElement(NavBar,{title:modeTitle[this.state.mode],mode:this.state.mode,changeMode:this.handleChangeMode,menuOpen:this.state.menuOpen,toggleMenuOpen:this.toggleMenuOpen,showAbout:this.showAboutDialog}),React.createElement(SideMenu,{menuOpen:this.state.menuOpen,mode:this.state.mode,toggleMenuOpen:this.toggleMenuOpen,showAbout:this.showAboutDialog}),this.state.selectedLeague===true?React.createElement(LeaguePage,{menuOpen:this.state.menuOpen,mode:this.state.mode,selectLeague:this.selectLeague,changeMode:this.handleChangeMode}):null,this.state.selectedTeam===true?React.createElement(TeamsPage,{menuOpen:this.state.menuOpen,mode:this.state.mode,selectTeam:this.selectTeam,League:this.state.League,changeMode:this.handleChangeMode}):null,this.state.selectedSeason===true?React.createElement(SeasonsPage,{menuOpen:this.state.menuOpen,mode:this.state.mode,selectSeason:this.selectSeason,League:this.state.League,Team:this.state.Team,changeMode:this.handleChangeMode}):null,this.state.Analyze===true?React.createElement(Analyze,{menuOpen:this.state.menuOpen,mode:this.state.mode,selectSeason:this.selectSeason,League:this.state.League,Team:this.state.Team,Season:this.state.Season,changeMode:this.handleChangeMode}):null,React.createElement(\"script\",{src:\"https://d3js.org/d3.v6.min.js\"}));}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/Users/kevinchen/Desktop/WSU_Fall2020/Data Science/Project/FIFA-project(server)/code-ch23/client/src/components/App.js"],"names":["React","NavBar","SideMenu","AppMode","LeaguePage","TeamsPage","AboutBox","SeasonsPage","Analyze","CSVReader","modeTitle","LEAGUE","TEAMS","SEASONS","modeToPage","App","getData","handleChangeMode","newMode","setState","mode","openMenu","menuOpen","closeMenu","toggleMenuOpen","prevState","closeAboutDialog","showAbout","showAboutDialog","selectLeague","league","selectedLeague","selectedTeam","League","console","log","selectTeam","team","selectedSeason","Team","selectSeason","season","Season","handleFiles","files","reader","FileReader","onload","e","alert","result","readAsText","state","setInterval","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport NavBar from './NavBar.js';\nimport SideMenu from './SideMenu.js';\nimport AppMode from \"./../AppMode.js\"\nimport LeaguePage from './LeaguePage.js';\nimport TeamsPage from './TeamsPage.js';\nimport AboutBox from './AboutBox.js';\nimport SeasonsPage from './SeasonsPage.js';\nimport Analyze from './Analyze.js';\nimport { CSVReader } from 'react-papaparse';\n// import LeaguesFile from './../leagues.csv'\n// var LeaguesFile = './../leagues.csv';\nconst modeTitle = {};\nmodeTitle[AppMode.LEAGUE] = \"FIFA Analysis\";\nmodeTitle[AppMode.TEAMS] = \"FIFA Analysis\";\nmodeTitle[AppMode.SEASONS] = \"FIFA Analysis\";\n\nconst modeToPage = {};\nmodeToPage[AppMode.LEAGUE] = LeaguePage;\nmodeToPage[AppMode.TEAMS] = TeamsPage;\nmodeToPage[AppMode.SEASONS] = TeamsPage;\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {mode: AppMode.LEAGUE,\n                  menuOpen: false,\n                  showAbout: false,\n                  selectedLeague: true,\n                  League: \"\",\n                  selectedTeam: false,\n                  Team: \"\",\n                  selectedSeason: false,\n                  Season: \"\",\n                  Analyze: false};\n  }\n  componentDidMount() {\n    // need to make the initial call to getData() to populate\n    // data right away\n    this.getData();\n\n    // Now we need to make it run at a specified interval\n    setInterval(this.getData, 5000); // runs every 5 seconds.\n  }\n\n  getData = () => {\n    // do something to fetch data from a remote API.\n    // console.log(\"Root: \" + this.state.League)\n  }\n  \n  handleChangeMode = (newMode) => {\n    this.setState({mode: newMode});\n  }\n\n  openMenu = () => {\n    this.setState({menuOpen : true});\n  }\n  \n  closeMenu = () => {\n    this.setState({menuOpen : false});\n  }\n\n  toggleMenuOpen = () => {\n    this.setState(prevState => ({menuOpen: !prevState.menuOpen}));\n  }\n\n  closeAboutDialog = () =>{\n    this.setState({showAbout: false});\n  }\n  showAboutDialog = () => {\n    this.setState({showAbout: true});\n  }\n  selectLeague = (league) =>{\n    this.setState({selectedLeague: false});\n    this.setState({selectedTeam: true});\n    this.setState({League: league});\n    //alert(\"League Selected\");\n    console.log(\"League Selected: \" + league)\n  }\n  selectTeam = (team) =>{\n    this.setState({selectedTeam: false});\n    this.setState({selectedSeason: true});\n    this.setState({Team: team});\n    //alert(\"League Selected\");\n    console.log(\"Team Selected: \" + team)\n  }\n  selectSeason = (season) =>{\n    this.setState({selectedSeason: false});\n    this.setState({Analyze: true});\n    this.setState({Season: season});\n    //alert(\"League Selected\");\n    console.log(\"Season Selected: \" + season)\n  }\n  handleFiles = files => {\n    var reader = new FileReader();\n    reader.onload = function(e) {\n        // Use reader.result\n        alert(reader.result)\n    }\n    reader.readAsText(files[0]);\n}\n\nhandleFiles = files => {\n  var reader = new FileReader();\n  reader.onload = function(e) {\n      // Use reader.result\n      alert(reader.result)\n  }\n  reader.readAsText(files[0]);\n}\n\n  render() {\n    // const ModePage = modeToPage[this.state.mode];\n    // console.log(LeaguesFile);\n    return (\n      <div>\n        {this.state.showAbout === true? <AboutBox closeAbout={this.closeAboutDialog}/>: null}\n        <NavBar \n          title={modeTitle[this.state.mode]} \n          mode={this.state.mode}\n          changeMode={this.handleChangeMode}\n          menuOpen={this.state.menuOpen}\n          toggleMenuOpen={this.toggleMenuOpen}\n          showAbout={this.showAboutDialog}/>\n          <SideMenu \n            menuOpen = {this.state.menuOpen}\n            mode={this.state.mode}\n            toggleMenuOpen={this.toggleMenuOpen}\n            showAbout={this.showAboutDialog}/>\n          {this.state.selectedLeague === true ? \n          <LeaguePage\n          menuOpen={this.state.menuOpen}\n          mode={this.state.mode}\n          selectLeague={this.selectLeague}\n          changeMode={this.handleChangeMode}/>:null}\n          {this.state.selectedTeam === true ?\n          <TeamsPage\n          menuOpen={this.state.menuOpen}\n          mode={this.state.mode}\n          selectTeam={this.selectTeam}\n          League={this.state.League}\n          changeMode={this.handleChangeMode}/>:null}\n          {this.state.selectedSeason === true ? \n          <SeasonsPage\n          menuOpen={this.state.menuOpen}\n          mode={this.state.mode}\n          selectSeason={this.selectSeason}\n          League={this.state.League}\n          Team={this.state.Team}\n          changeMode={this.handleChangeMode}/>: null}\n          {this.state.Analyze === true ? \n          <Analyze\n          menuOpen={this.state.menuOpen}\n          mode={this.state.mode}\n          selectSeason={this.selectSeason}\n          League={this.state.League}\n          Team={this.state.Team}\n          Season={this.state.Season}\n          changeMode={this.handleChangeMode}/>: null}\n          {/* <ModePage \n            menuOpen={this.state.menuOpen}\n            mode={this.state.mode}\n            selectLeague={this.selectLeague}\n            changeMode={this.handleChangeMode}/> */}\n            <script src=\"https://d3js.org/d3.v6.min.js\"></script>\n        </div>\n        \n    );  \n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}